{"variants":[{"paths":["\/documentation\/complexmodule\/complex\/algebraicfield-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AlgebraicField-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"ComplexModule"}],"role":"collectionGroup","title":"AlgebraicField Implementations"},"hierarchy":{"paths":[["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex"]]},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-78ojs","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-94u8w","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/=(_:_:)"],"generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-1twmy","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-5ielo"],"generated":true}],"references":{"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule":{"role":"collection","title":"ComplexModule","abstract":[],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex/reciprocal-1twmy":{"conformance":{"constraints":[{"type":"codeVoice","code":"RealType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Real"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"reciprocal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Complex","preciseIdentifier":"s:13ComplexModule0A0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The reciprocal of this value, if it can be computed without undue"},{"type":"text","text":" "},{"type":"text","text":"overflow or underflow."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-1twmy","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule\/complex\/reciprocal-1twmy"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex":{"role":"symbol","title":"Complex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Complex"}],"abstract":[{"type":"text","text":"A complex number represented by real and imaginary parts."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Complex"}],"url":"\/documentation\/complexmodule\/complex"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex//=(_:_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"RealType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Real"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"\/=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Complex","preciseIdentifier":"s:13ComplexModule0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Complex","preciseIdentifier":"s:13ComplexModule0A0V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Replaces a with the (approximate) quotient "},{"type":"codeVoice","code":"a\/b"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule\/complex\/\/=(_:_:)"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex/reciprocal-5ielo":{"role":"symbol","title":"reciprocal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Implementations should be "},{"type":"emphasis","inlineContent":[{"type":"text","text":"conservative"}]},{"type":"text","text":" with the reciprocal property;"},{"type":"text","text":" "},{"type":"text","text":"it is OK to return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" even in cases where a reciprocal could be"},{"type":"text","text":" "},{"type":"text","text":"represented. For this reason, a default implementation that simply"},{"type":"text","text":" "},{"type":"text","text":"always returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is correct, but conforming types should provide"},{"type":"text","text":" "},{"type":"text","text":"a better implementation if possible."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-5ielo","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule\/complex\/reciprocal-5ielo"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex//(_:_:)-94u8w":{"role":"symbol","title":"\/(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"The (approximate) quotient "},{"type":"codeVoice","code":"a\/b"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-94u8w","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule\/complex\/\/(_:_:)-94u8w"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex//(_:_:)-78ojs":{"conformance":{"constraints":[{"type":"codeVoice","code":"RealType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Real"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"\/(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Complex","preciseIdentifier":"s:13ComplexModule0A0V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Complex","preciseIdentifier":"s:13ComplexModule0A0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Complex","preciseIdentifier":"s:13ComplexModule0A0V"}],"abstract":[{"type":"text","text":"The (approximate) quotient "},{"type":"codeVoice","code":"a\/b"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-78ojs","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule\/complex\/\/(_:_:)-78ojs"}}}