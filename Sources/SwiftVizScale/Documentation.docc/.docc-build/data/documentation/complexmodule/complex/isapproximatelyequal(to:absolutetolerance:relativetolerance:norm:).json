{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isApproximatelyEqual"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Magnitude"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absoluteTolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":", "},{"kind":"externalParam","text":"relativeTolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":" = 0, "},{"kind":"externalParam","text":"norm"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FloatingPoint","preciseIdentifier":"s:SF"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to which "},{"type":"codeVoice","code":"self"},{"type":"text","text":" is compared."}]}]},{"name":"absoluteTolerance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The absolute tolerance to use in the comparison."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This value should be non-negative and finite."},{"type":"text","text":" "},{"type":"text","text":"This constraint on is only checked in debug builds, because a"},{"type":"text","text":" "},{"type":"text","text":"mathematically well-defined result exists for any tolerance, even"},{"type":"text","text":" "},{"type":"text","text":"one out of range."}]}]},{"name":"relativeTolerance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The relative tolerance to use in the comparison."},{"type":"text","text":" "},{"type":"text","text":"Defaults to zero."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This value should be non-negative and less than or equal to 1."},{"type":"text","text":" "},{"type":"text","text":"This constraint on is only checked in debug builds, because a"},{"type":"text","text":" "},{"type":"text","text":"mathematically well-defined result exists for any tolerance,"},{"type":"text","text":" "},{"type":"text","text":"even one out of range."}]}]},{"name":"norm","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The norm to use for the comparison."},{"type":"text","text":" "},{"type":"text","text":"Defaults to "},{"type":"codeVoice","code":"\\.magnitude"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if we wanted to test if a complex value was inside a"},{"type":"text","text":" "},{"type":"text","text":"circle of radius 0.001 centered at (1 + 0i), we could use:"}]},{"type":"codeListing","syntax":null,"code":["z.isApproximatelyEqual(","  to: 1,","  absoluteTolerance: 0.001,","  norm: \\.length",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(if we used the default norm, "},{"type":"codeVoice","code":".magnitude"},{"type":"text","text":", we would be testing if"},{"type":"text","text":" "},{"type":"codeVoice","code":"z"},{"type":"text","text":" were inside a square region instead.)"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are equal, or if they are finite and either"}]},{"type":"codeListing","syntax":null,"code":["norm(self - other) <= absoluteTolerance"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"or"}]},{"type":"codeListing","syntax":null,"code":["norm(self - other) <= relativeTolerance * scale"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"where "},{"type":"codeVoice","code":"scale"},{"type":"text","text":" is "},{"type":"codeVoice","code":"max(norm(self), norm(other))"},{"type":"text","text":"."}]},{"anchor":"Mathematical-Properties:","level":2,"type":"heading","text":"Mathematical Properties:"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"reflexive"}]},{"type":"text","text":" for non-exceptional values (such as NaN)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"symmetric"}]},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"transitive"}]},{"type":"text","text":". Because of this, approximately equality is"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"not an equivalence relation"}]},{"type":"text","text":", even when restricted to"},{"type":"text","text":" "},{"type":"text","text":"non-exceptional values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means that you must not use approximate equality to implement"},{"type":"text","text":" "},{"type":"text","text":"a conformance to Equatable, as it will violate the invariants of"},{"type":"text","text":" "},{"type":"text","text":"code written against that protocol."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For any point "},{"type":"codeVoice","code":"a"},{"type":"text","text":", the set of values that compare approximately equal"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"a"},{"type":"text","text":" is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"convex"}]},{"type":"text","text":" (under the assumption that "},{"type":"codeVoice","code":"norm"},{"type":"text","text":" implements a"},{"type":"text","text":" "},{"type":"text","text":"valid norm, which cannot be checked by this function or a protocol)."}]}]}]},{"anchor":"See-Also:","level":2,"type":"heading","text":"See Also:"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isApproximatelyEqual(to:[relativeTolerance:norm:])"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isApproximatelyEqual(to:absoluteTolerance:[relativeTolerance:])"}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Test if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are approximately equal with specified"},{"type":"text","text":" "},{"type":"text","text":"tolerances and norm."}],"kind":"symbol","metadata":{"role":"symbol","title":"isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isApproximatelyEqual"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Magnitude"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absoluteTolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":", "},{"kind":"externalParam","text":"relativeTolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":", "},{"kind":"externalParam","text":"norm"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:s18AdditiveArithmeticP10RealModuleE20isApproximatelyEqual2to17absoluteTolerance08relativeJ04normSbx_qd__qd__qd__xXEtSFRd__lF::SYNTHESIZED::s:13ComplexModule0A0V","extendedModule":"Swift","modules":[{"name":"ComplexModule"}]},"hierarchy":{"paths":[["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AdditiveArithmetic-Implementations"]]},"references":{"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule":{"role":"collection","title":"ComplexModule","abstract":[],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex":{"role":"symbol","title":"Complex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Complex"}],"abstract":[{"type":"text","text":"A complex number represented by real and imaginary parts."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Complex"}],"url":"\/documentation\/complexmodule\/complex"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)":{"role":"symbol","title":"isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isApproximatelyEqual"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Magnitude"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absoluteTolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":", "},{"kind":"externalParam","text":"relativeTolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":", "},{"kind":"externalParam","text":"norm"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Magnitude"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Test if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are approximately equal with specified"},{"type":"text","text":" "},{"type":"text","text":"tolerances and norm."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)","kind":"symbol","type":"topic","url":"\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)"},"doc://com.github.swiftviz.SwiftVizScale/documentation/ComplexModule/Complex/AdditiveArithmetic-Implementations":{"role":"collectionGroup","title":"AdditiveArithmetic Implementations","abstract":[],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AdditiveArithmetic-Implementations","kind":"article","type":"topic","url":"\/documentation\/complexmodule\/complex\/additivearithmetic-implementations"}}}