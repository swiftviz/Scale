{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expMinusOne"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"x"},{"type":"text","text":" is close to zero, the expression "},{"type":"codeVoice","code":".exp(x) - 1"},{"type":"text","text":" suffers from"},{"type":"text","text":" "},{"type":"text","text":"catastrophic cancellation and the result will not have full accuracy."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":".expMinusOne(x)"},{"type":"text","text":" function gives you a means to address this problem."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As an example, consider the expression "},{"type":"codeVoice","code":"(x + 1)*exp(x) - 1"},{"type":"text","text":".  When "},{"type":"codeVoice","code":"x"},{"type":"text","text":" "},{"type":"text","text":"is smaller than "},{"type":"codeVoice","code":".ulpOfOne"},{"type":"text","text":", this expression evaluates to "},{"type":"codeVoice","code":"0.0"},{"type":"text","text":", when it"},{"type":"text","text":" "},{"type":"text","text":"should actually round to "},{"type":"codeVoice","code":"2*x"},{"type":"text","text":". We can get a full-accuracy result by"},{"type":"text","text":" "},{"type":"text","text":"using the following instead:"}]},{"type":"codeListing","syntax":null,"code":["let t = .expMinusOne(x)","return x*(t+1) + t       \/\/ x*exp(x) + (exp(x)-1) = (x+1)*exp(x) - 1"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This re-written expression delivers an accurate result for all values"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"x"},{"type":"text","text":", not just for small values."}]},{"anchor":"See-also:","level":2,"type":"heading","text":"See also:"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"exp()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"exp2()"},{"type":"text","text":" (for types conforming to "},{"type":"codeVoice","code":"RealFunctions"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"exp10()"},{"type":"text","text":" (for types conforming to "},{"type":"codeVoice","code":"RealFunctions"},{"type":"text","text":")"}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"exp(x) - 1, computed in such a way as to maintain accuracy for small x."}],"kind":"symbol","metadata":{"role":"symbol","title":"expMinusOne(_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expMinusOne"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:10RealModule19ElementaryFunctionsP11expMinusOneyxxFZ","required":true,"modules":[{"name":"RealModule"}]},"hierarchy":{"paths":[["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions"]]},"references":{"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule/ElementaryFunctions/expMinusOne(_:)":{"role":"symbol","title":"expMinusOne(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expMinusOne"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"exp(x) - 1, computed in such a way as to maintain accuracy for small x."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)"},"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule":{"role":"collection","title":"RealModule","abstract":[],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule","kind":"symbol","type":"topic","url":"\/documentation\/realmodule"},"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule/ElementaryFunctions":{"role":"symbol","title":"ElementaryFunctions","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ElementaryFunctions"}],"abstract":[{"type":"text","text":"A type that has elementary functions available."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ElementaryFunctions"}],"url":"\/documentation\/realmodule\/elementaryfunctions"}}}