{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If self is zero and the type has no representation for infinity (as"},{"type":"text","text":" "},{"type":"text","text":"in a typical finite field implementation), or if a reciprocal would"},{"type":"text","text":" "},{"type":"text","text":"overflow or underflow such that it cannot be accurately represented,"},{"type":"text","text":" "},{"type":"text","text":"the result is nil."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that "},{"type":"codeVoice","code":".zero.reciprocal"},{"type":"text","text":", somewhat surprisingly, is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" nil"},{"type":"text","text":" "},{"type":"text","text":"for "},{"type":"codeVoice","code":"Real"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Complex"},{"type":"text","text":" types, because these types have an"},{"type":"text","text":" "},{"type":"codeVoice","code":".infinity"},{"type":"text","text":" value that acts as the reciprocal of "},{"type":"codeVoice","code":".zero"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"x.reciprocal"},{"type":"text","text":" is non-nil, you may be able to replace division by "},{"type":"codeVoice","code":"x"},{"type":"text","text":" "},{"type":"text","text":"with multiplication by this value. It is not advantageous to do this"},{"type":"text","text":" "},{"type":"text","text":"for an isolated division unless it is a compile-time constant visible"},{"type":"text","text":" "},{"type":"text","text":"to the compiler, but if you are dividing many values by a single"},{"type":"text","text":" "},{"type":"text","text":"denominator, this will often be a significant performance win."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that this will slightly perturb results for some fields with"},{"type":"text","text":" "},{"type":"text","text":"approximate arithmetic, such as real types–using a normal division"},{"type":"text","text":" "},{"type":"text","text":"is generally more accurate–but no catastrophic loss of accuracy will"},{"type":"text","text":" "},{"type":"text","text":"result. For fields with exact arithmetic, or for the Complex types,"},{"type":"text","text":" "},{"type":"text","text":"the results are identical."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A typical use case looks something like this:"}]},{"type":"codeListing","syntax":null,"code":["func divide<T: AlgebraicField>(data: [T], by divisor: T) -> [T] {","  \/\/ If divisor is well-scaled, multiply by reciprocal.","  if let recip = divisor.reciprocal {","    return data.map { $0 * recip }","  }","  \/\/ Fallback on using division.","  return data.map { $0 \/ divisor }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3"],"traits":[{"interfaceLanguage":"swift"}]}],"defaultImplementationsSections":[{"title":"AlgebraicField Implementations","identifiers":["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m"]},{"title":"Real Implementations","identifiers":["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/reciprocal"]}],"identifier":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"kind":"symbol","metadata":{"role":"symbol","title":"reciprocal","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"symbolKind":"property","externalID":"s:10RealModule14AlgebraicFieldP10reciprocalxSgvp","required":true,"modules":[{"name":"RealModule"}]},"hierarchy":{"paths":[["doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule","doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField"]]},"references":{"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule/AlgebraicField/reciprocal-156o3":{"defaultImplementations":2,"role":"symbol","title":"reciprocal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3"},"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule/Real/reciprocal":{"role":"symbol","title":"reciprocal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/reciprocal","kind":"symbol","type":"topic","url":"\/documentation\/realmodule\/real\/reciprocal"},"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule/AlgebraicField/reciprocal-6sp2m":{"role":"symbol","title":"reciprocal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Implementations should be "},{"type":"emphasis","inlineContent":[{"type":"text","text":"conservative"}]},{"type":"text","text":" with the reciprocal property;"},{"type":"text","text":" "},{"type":"text","text":"it is OK to return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" even in cases where a reciprocal could be"},{"type":"text","text":" "},{"type":"text","text":"represented. For this reason, a default implementation that simply"},{"type":"text","text":" "},{"type":"text","text":"always returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is correct, but conforming types should provide"},{"type":"text","text":" "},{"type":"text","text":"a better implementation if possible."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m","kind":"symbol","type":"topic","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-6sp2m"},"https://en.wikipedia.org/wiki/Field_(mathematics)":{"title":"field","titleInlineContent":[{"type":"text","text":"field"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","url":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)"},"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule/AlgebraicField":{"role":"symbol","title":"AlgebraicField","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlgebraicField"}],"abstract":[{"type":"text","text":"A type modeling an algebraic "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)"},{"type":"text","text":". Refines the "},{"type":"codeVoice","code":"SignedNumeric"},{"type":"text","text":" protocol,"},{"type":"text","text":" "},{"type":"text","text":"adding division."}],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlgebraicField"}],"url":"\/documentation\/realmodule\/algebraicfield"},"doc://com.github.swiftviz.SwiftVizScale/documentation/RealModule":{"role":"collection","title":"RealModule","abstract":[],"identifier":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule","kind":"symbol","type":"topic","url":"\/documentation\/realmodule"}}}