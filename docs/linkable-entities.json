[
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "fastTwoSum"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/fasttwosum(_:_:)",
    "platforms" : [

    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/fastTwoSum(_:_:)",
    "taskGroups" : [

    ],
    "title" : "fastTwoSum(_:_:)",
    "usr" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/equatable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Equatable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/!=(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/==(_:_:)"
        ],
        "title" : "Operators"
      }
    ],
    "title" : "Equatable Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/customdebugstringconvertible-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/CustomDebugStringConvertible-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/debugDescription"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The gamma function Γ(x).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "gamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/gamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/gamma(_:)",
    "taskGroups" : [

    ],
    "title" : "gamma(_:)",
    "usr" : "s:10RealModule0A9FunctionsP5gammayxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is normal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isNormal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isnormal",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isNormal",
    "taskGroups" : [

    ],
    "title" : "isNormal",
    "usr" : "s:13ComplexModule0A0V8isNormalSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "The base-10 logarithm of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log10"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/log10(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/log10(_:)",
    "taskGroups" : [

    ],
    "title" : "log10(_:)",
    "usr" : "s:10RealModule0A9FunctionsP5log10yxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/additivearithmetic-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AdditiveArithmetic-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+=(_:_:)-247oi",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+=(_:_:)-6pgx9",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-=(_:_:)-7i0xi",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-=(_:_:)-85whw"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/zero-52bzy",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/zero-5ejwo"
        ],
        "title" : "Type Properties"
      }
    ],
    "title" : "AdditiveArithmetic Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The point at infinity.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "infinity"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/infinity",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/infinity",
    "taskGroups" : [

    ],
    "title" : "infinity",
    "usr" : "s:13ComplexModule0A0V8infinityACyxGvpZ"
  },
  {
    "abstract" : [
      {
        "text" : "Data processed against a scale is clamped to the upper and lower values of the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "clamp"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/domaindatatransform\/clamp",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/clamp",
    "taskGroups" : [

    ],
    "title" : "DomainDataTransform.clamp",
    "usr" : "s:13SwiftVizScale19DomainDataTransformO5clampyA2CmF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "label"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/label",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/label",
    "taskGroups" : [

    ],
    "title" : "label",
    "usr" : "s:13SwiftVizScale4TickV5labelSSvp"
  },
  {
    "abstract" : [
      {
        "text" : "The base-2 logarithm of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log2"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/log2(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/log2(_:)",
    "taskGroups" : [

    ],
    "title" : "log2(_:)",
    "usr" : "s:10RealModule0A9FunctionsP4log2yxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-(_:_:)",
    "taskGroups" : [

    ],
    "title" : "-(_:_:)",
    "usr" : "s:13ComplexModule0A0V1soiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Test if ",
        "type" : "text"
      },
      {
        "code" : "self",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " are approximately equal with specified tolerances.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isApproximatelyEqual"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "absoluteTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "relativeTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)",
    "taskGroups" : [

    ],
    "title" : "isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)",
    "usr" : "s:Sj10RealModuleSF9MagnitudeRpzrlE20isApproximatelyEqual2to17absoluteTolerance08relativeI0Sbx_A2CtF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "formatter"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:objc(cs)NSFormatter",
        "text" : "Formatter"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/formatter",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/formatter",
    "taskGroups" : [

    ],
    "title" : "formatter",
    "usr" : "s:13SwiftVizScale4TickV9formatterSo11NSFormatterCSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/invert(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE6invert_2to9InputTypeQzSg06OutputG0Qz_AJtF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "*="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/*=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/*=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "*=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2meoiyyACyxGz_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/invert(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE6invert_2to9InputTypeQzSg06OutputG0Qz_AJtF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "zero"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/zero-5ejwo",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/zero-5ejwo",
    "taskGroups" : [

    ],
    "title" : "zero",
    "usr" : "s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between ",
        "type" : "text"
      },
      {
        "code" : "0",
        "type" : "codeVoice"
      },
      {
        "text" : " and to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/scale(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE5scale_2to10OutputTypeQzSg05InputG0Qz_AGtF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "abstract" : [
      {
        "code" : "atan(y\/x)",
        "type" : "codeVoice"
      },
      {
        "text" : ", with sign selected according to the quadrant of ",
        "type" : "text"
      },
      {
        "code" : "(x, y)",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atan2"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "y"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "x"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/atan2(y:x:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/atan2(y:x:)",
    "taskGroups" : [

    ],
    "title" : "atan2(y:x:)",
    "usr" : "s:10RealModule0A9FunctionsP5atan21y1xxx_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The length and phase (or polar coordinates) of this value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "polar"
      },
      {
        "kind" : "text",
        "text" : ": (length"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ", phase"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/polar",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/polar",
    "taskGroups" : [

    ],
    "title" : "polar",
    "usr" : "s:13ComplexModule0A0V5polarx6length_x5phasetvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/realmodule",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions"
        ],
        "title" : "Protocols"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented"
        ],
        "title" : "Enumerations"
      }
    ],
    "title" : "RealModule",
    "usr" : "RealModule"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/tickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-2i6ex",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-3xaat",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-9vifj"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "A type that maps values from an input ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "domain",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " to an output ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "range",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Scale"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/OutputType",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/transformType",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform"
        ],
        "title" : "Inspecting Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/scale(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/invert(_:to:)"
        ],
        "title" : "Converting Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainContains(_:)-3senz",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainContains(_:)-73w51",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/transformAgainstDomain(_:)"
        ],
        "title" : "Comparing Values"
      }
    ],
    "title" : "Scale",
    "usr" : "s:13SwiftVizScale0C0P"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/\/(_:_:)-9bcy2",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/\/(_:_:)-9bcy2",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE1doiyxx_xtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/identifiable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/Identifiable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/id-40sis"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "Identifiable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Generates a range of numbers with a minimum, maximum, and step interval that’s visually pleasing.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "rangeOfNiceValues"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "max"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "ofSize"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : "]"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/nicevalue\/rangeofnicevalues(min:max:ofsize:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/rangeOfNiceValues(min:max:ofSize:)",
    "taskGroups" : [

    ],
    "title" : "rangeOfNiceValues(min:max:ofSize:)",
    "usr" : "s:13SwiftVizScale9NiceValueP07rangeOfD6Values3min3max6ofSizeSay10NumberTypeQzGAI_AISitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A type that can be converted into an approximate value that is easier to understand.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NiceValue"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/nicevalue",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceVersion(for:min:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/NumberType"
        ],
        "title" : "Generating Nice Numbers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/rangeOfNiceValues(min:max:ofSize:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceMinStepMax(min:max:ofSize:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceMinimumValueForRange(min:max:)"
        ],
        "title" : "Creating Ranges of Nice Numbers"
      }
    ],
    "title" : "NiceValue",
    "usr" : "s:13SwiftVizScale9NiceValueP"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s7DecoderP",
        "text" : "Decoder"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(from:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(from:)",
    "taskGroups" : [

    ],
    "title" : "init(from:)",
    "usr" : "s:13ComplexModule0A0VAASeRzrlE4fromACyxGs7Decoder_p_tKcfc"
  },
  {
    "abstract" : [
      {
        "code" : "sqrt(x*x + y*y)",
        "type" : "codeVoice"
      },
      {
        "text" : ", computed in a manner that avoids spurious overflow or",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "underflow.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "hypot"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/hypot(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/hypot(_:_:)",
    "taskGroups" : [

    ],
    "title" : "hypot(_:_:)",
    "usr" : "s:10RealModule0A9FunctionsP5hypotyxx_xtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/encodable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Encodable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/encode(to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Encodable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Square_root",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sqrt"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/sqrt(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/sqrt(_:)",
    "taskGroups" : [

    ],
    "title" : "sqrt(_:)",
    "usr" : "s:10RealModule0A0PAAE4sqrtyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Exponential_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " e^x whose base ",
        "type" : "text"
      },
      {
        "code" : "e",
        "type" : "codeVoice"
      },
      {
        "text" : " is the base of the",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "natural logarithm.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/exp(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/exp(_:)",
    "taskGroups" : [

    ],
    "title" : "exp(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3expyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Data processed against a scale isn’t influenced by the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "none"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/domaindatatransform\/none",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/none",
    "taskGroups" : [

    ],
    "title" : "DomainDataTransform.none",
    "usr" : "s:13SwiftVizScale19DomainDataTransformO4noneyA2CmF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/tickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-2bosk",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-8sxks",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-napq"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/init(_:transform:desiredticks:)-5gvku",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(_:transform:desiredTicks:)-5gvku",
    "taskGroups" : [

    ],
    "title" : "init(_:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale06LinearC0V_9transform12desiredTicksACyxq_GSNyxG_AA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified real part and zero imaginary part,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "if it can be constructed without rounding.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "?<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "exactly"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V7exactlyACyxGSgqd___tcSzRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(exactly:)-282ck",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(exactly:)-282ck",
    "taskGroups" : [

    ],
    "title" : "init(exactly:)",
    "usr" : "s:13ComplexModule0A0V7exactlyACyxGSgqd___tcSzRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) reciprocal (multiplicative inverse) of this number,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "if it is representable.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule14AlgebraicFieldP10reciprocalxSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is zero.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isZero"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/iszero",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isZero",
    "taskGroups" : [

    ],
    "title" : "isZero",
    "usr" : "s:13ComplexModule0A0V6isZeroSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "The value of the tick.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/value",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/value",
    "taskGroups" : [

    ],
    "title" : "value",
    "usr" : "s:13SwiftVizScale4TickV5valuexvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/sinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/sinh(_:)",
    "taskGroups" : [

    ],
    "title" : "sinh(_:)",
    "usr" : "s:13ComplexModule0A0V4sinhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/ticks(rangelower:rangehigher:)-3xaat",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-3xaat",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASd9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySd06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "abstract" : [
      {
        "text" : "cos(x) - 1, computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cosMinusOne"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/cosminusone(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/cosMinusOne(_:)",
    "taskGroups" : [

    ],
    "title" : "cosMinusOne(_:)",
    "usr" : "s:10RealModule0A0PAAE11cosMinusOneyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/ticks(rangelower:rangehigher:)-8sxks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-8sxks",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASf9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySf06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ∞-norm of the value (",
        "type" : "text"
      },
      {
        "code" : "max(abs(real), abs(imaginary))",
        "type" : "codeVoice"
      },
      {
        "text" : ").",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "magnitude"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/magnitude",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/magnitude",
    "taskGroups" : [

    ],
    "title" : "magnitude",
    "usr" : "s:13ComplexModule0A0V9magnitudexvp"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified imaginary part and zero real part.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "imaginary"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(imaginary:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(imaginary:)",
    "taskGroups" : [

    ],
    "title" : "init(imaginary:)",
    "usr" : "s:13ComplexModule0A0V9imaginaryACyxGx_tcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Test if ",
        "type" : "text"
      },
      {
        "code" : "self",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " are approximately equal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isApproximatelyEqual"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "relativeTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "norm"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:relativetolerance:norm:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:relativeTolerance:norm:)",
    "taskGroups" : [

    ],
    "title" : "isApproximatelyEqual(to:relativeTolerance:norm:)",
    "usr" : "s:Sj10RealModuleSF9MagnitudeRpzrlE20isApproximatelyEqual2to17relativeTolerance4normSbx_A2CxXEtF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "log(1 + x), computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "onePlus"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/log(oneplus:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/log(onePlus:)",
    "taskGroups" : [

    ],
    "title" : "log(onePlus:)",
    "usr" : "s:13ComplexModule0A0V3log7onePlusACyxGAF_tFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The location where the tick should be placed within a chart’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "rangeLocation"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV10OutputTypeq_mfp",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/rangelocation",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/rangeLocation",
    "taskGroups" : [

    ],
    "title" : "rangeLocation",
    "usr" : "s:13SwiftVizScale4TickV13rangeLocationq_vp"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified real part and zero imaginary part.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:)-5aesj",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:)-5aesj",
    "taskGroups" : [

    ],
    "title" : "init(_:)",
    "usr" : "s:13ComplexModule0A0VyACyxGxcfc"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:13SwiftVizScale0C0P13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/\/(_:_:)-94u8w",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-94u8w",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE1doiyxx_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value of the type into an instance of ",
        "type" : "text"
      },
      {
        "code" : "Double",
        "type" : "codeVoice"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "toDouble"
      },
      {
        "kind" : "text",
        "text" : "() -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/convertiblewithdouble\/todouble()",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble\/toDouble()",
    "taskGroups" : [

    ],
    "title" : "toDouble()",
    "usr" : "s:13SwiftVizScale21ConvertibleWithDoubleP02toF0SdyF"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:13SwiftVizScale05PowerC0V6invert_4from2toxSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "A type modeling an algebraic ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : ". Refines the ",
        "type" : "text"
      },
      {
        "code" : "SignedNumeric",
        "type" : "codeVoice"
      },
      {
        "text" : " protocol,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "adding division.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AlgebraicField"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/\/(_:_:)-9nuhy",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/\/=(_:_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "AlgebraicField",
    "usr" : "s:10RealModule14AlgebraicFieldP"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "hash"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "into"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s6HasherV",
        "text" : "Hasher"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/hash(into:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/hash(into:)",
    "taskGroups" : [

    ],
    "title" : "hash(into:)",
    "usr" : "s:13ComplexModule0A0V4hash4intoys6HasherVz_tF"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:13SwiftVizScale03LogC0V6invert_4from2toxSgq__q_q_tF"
  },
  {
    "abstract" : [
      {
        "text" : "10^x",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp10"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/exp10(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/exp10(_:)",
    "taskGroups" : [

    ],
    "title" : "exp10(_:)",
    "usr" : "s:10RealModule0A0PAAE5exp10yxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:13SwiftVizScale06LinearC0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/atanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/atanh(_:)",
    "taskGroups" : [

    ],
    "title" : "atanh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP5atanhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " (inverse cosine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/acos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/acos(_:)",
    "taskGroups" : [

    ],
    "title" : "acos(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4acosyxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "twoProdFMA"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/twoprodfma(_:_:)",
    "platforms" : [

    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/twoProdFMA(_:_:)",
    "taskGroups" : [

    ],
    "title" : "twoProdFMA(_:_:)",
    "usr" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "abstract" : [
      {
        "text" : "exp(x) - 1, computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "expMinusOne"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/expminusone(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/expMinusOne(_:)",
    "taskGroups" : [

    ],
    "title" : "expMinusOne(_:)",
    "usr" : "s:13ComplexModule0A0V11expMinusOneyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/cosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/cosh(_:)",
    "taskGroups" : [

    ],
    "title" : "cosh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4coshyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A  visual representation of a point along an axis.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Tick"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)-200s1",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)-cjxk"
        ],
        "title" : "Creating Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/id-13dv3",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/id-40sis",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/rangeLocation",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/value"
        ],
        "title" : "Inspecting Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/formatter",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/label"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/Identifiable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "Tick",
    "usr" : "s:13SwiftVizScale4TickV"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Cosine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/cos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/cos(_:)",
    "taskGroups" : [

    ],
    "title" : "cos(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3cosyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "A “canonical” representation of the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "canonicalized"
      },
      {
        "kind" : "text",
        "text" : ": `Self`"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/canonicalized",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/canonicalized",
    "taskGroups" : [

    ],
    "title" : "canonicalized",
    "usr" : "s:13ComplexModule0A0V13canonicalizedACyxGvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/!=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/!=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "!=(_:_:)",
    "usr" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SO",
        "text" : "ObjectIdentifier"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/id-40sis",
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/id-40sis",
    "taskGroups" : [

    ],
    "title" : "id",
    "usr" : "s:s12IdentifiablePsRlzCrlE2idSOvp::SYNTHESIZED::s:13SwiftVizScale4TickV"
  },
  {
    "abstract" : [
      {
        "text" : "The additive identity, with real and imaginary parts both zero.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "zero"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/zero-52bzy",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/zero-52bzy",
    "taskGroups" : [

    ],
    "title" : "zero",
    "usr" : "s:13ComplexModule0A0V4zeroACyxGvpZ"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tickscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:13SwiftVizScale04TickC0P12desiredTicksSivp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "integerLiteral"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(integerliteral:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(integerLiteral:)",
    "taskGroups" : [

    ],
    "title" : "init(integerLiteral:)",
    "usr" : "s:13ComplexModule0A0V14integerLiteralACyxGSi_tcfc"
  },
  {
    "abstract" : [
      {
        "text" : "exp(y * log(x)) computed with additional internal precision.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/pow(_:_:)-2qmul",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-2qmul",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3powyxx_xtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/hashable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Hashable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/hash(into:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Hashable Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "A type that can be converted into a nice number.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "associatedtype"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale21ConvertibleWithDoubleP",
        "text" : "ConvertibleWithDouble"
      }
    ],
    "kind" : "org.swift.docc.kind.associatedType",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/nicevalue\/numbertype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/NumberType",
    "taskGroups" : [

    ],
    "title" : "NumberType",
    "usr" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Square_root",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sqrt"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/sqrt(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/sqrt(_:)",
    "taskGroups" : [

    ],
    "title" : "sqrt(_:)",
    "usr" : "s:13ComplexModule0A0V4sqrtyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:13SwiftVizScale03LogC0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "*"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/*(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/*(_:_:)",
    "taskGroups" : [

    ],
    "title" : "*(_:_:)",
    "usr" : "s:13ComplexModule0A0V1moiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new linear scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale06LinearC0V4from2to9transform12desiredTicksACyxq_Gx_xAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "A normalized complex number with the same phase as this value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "normalized"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/normalized",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/normalized",
    "taskGroups" : [

    ],
    "title" : "normalized",
    "usr" : "s:13ComplexModule0A0V10normalizedACyxGSgvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex"
        ],
        "title" : "Structures"
      }
    ],
    "title" : "ComplexModule",
    "usr" : "ComplexModule"
  },
  {
    "abstract" : [
      {
        "text" : "10^x",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp10"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/exp10(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/exp10(_:)",
    "taskGroups" : [

    ],
    "title" : "exp10(_:)",
    "usr" : "s:10RealModule0A9FunctionsP5exp10yxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:13SwiftVizScale03LogC0V12domainExtentxvp"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:13SwiftVizScale03LogC0V11domainLowerxvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/numerics",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/Numerics",
    "taskGroups" : [

    ],
    "title" : "Numerics",
    "usr" : "Numerics"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "IntegerLiteralType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/integerliteraltype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/IntegerLiteralType",
    "taskGroups" : [

    ],
    "title" : "Complex.IntegerLiteralType",
    "usr" : "s:13ComplexModule0A0V18IntegerLiteralTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:13SwiftVizScale03LogC0V5scale_4from2toq_Sgx_q_q_tF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/init(_:exponent:transform:desiredticks:)-3kwxa",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(_:exponent:transform:desiredTicks:)-3kwxa",
    "taskGroups" : [

    ],
    "title" : "init(_:exponent:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale05PowerC0V_8exponent9transform12desiredTicksACyxq_GSNyxG_SdAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:13SwiftVizScale06LinearC0V5scale_4from2toq_Sgx_q_q_tF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/signednumeric-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/SignedNumeric-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-(_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/negate()"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "SignedNumeric Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a tuple that provide nice conversions of the minimum, step value, maximum for a range with a desired number of steps.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "niceMinStepMax"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "max"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "ofSize"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/nicevalue\/niceminstepmax(min:max:ofsize:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceMinStepMax(min:max:ofSize:)",
    "taskGroups" : [

    ],
    "title" : "niceMinStepMax(min:max:ofSize:)",
    "usr" : "s:13SwiftVizScale9NiceValueP14niceMinStepMax3min3max6ofSize10NumberTypeQz_A2ItAI_AISitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The complimentary error function evaluated at ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "erfc"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/erfc(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/erfc(_:)",
    "taskGroups" : [

    ],
    "title" : "erfc(_:)",
    "usr" : "s:10RealModule0A9FunctionsP4erfcyxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/expressiblebyintegerliteral-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/ExpressibleByIntegerLiteral-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(integerLiteral:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/IntegerLiteralType"
        ],
        "title" : "Type Aliases"
      }
    ],
    "title" : "ExpressibleByIntegerLiteral Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:13SwiftVizScale05PowerC0V12domainHigherxvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/customstringconvertible-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/CustomStringConvertible-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/description"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+(_:_:)",
    "taskGroups" : [

    ],
    "title" : "+(_:_:)",
    "usr" : "s:13ComplexModule0A0V1poiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : " raised to the nth power.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/pow(_:_:)-9imp6",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-9imp6",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3powyxx_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:13SwiftVizScale0C0P11domainLower9InputTypeQzvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse sine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/asin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/asin(_:)",
    "taskGroups" : [

    ],
    "title" : "asin(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4asinyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tickValues"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/tickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/tickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "tickValues(_:from:to:)",
    "usr" : "s:13SwiftVizScale04TickC0PAAE10tickValues_4from2toSayAA0D0Vy9InputTypeQz06OutputJ0QzGGSayAJG_A2LtF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-=(_:_:)-85whw",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-=(_:_:)-85whw",
    "taskGroups" : [

    ],
    "title" : "-=(_:_:)",
    "usr" : "s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tickValues"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tickscale\/tickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/tickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "tickValues(_:from:to:)",
    "usr" : "s:13SwiftVizScale04TickC0PAAE10tickValues_4from2toSayAA0D0Vy9InputTypeQz06OutputJ0QzGGSayAJG_A2LtF"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/ticks(rangelower:rangehigher:)-napq",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-napq",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASi9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySi06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "A complex number constructed by specifying the real and imaginary parts.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:_:)",
    "taskGroups" : [

    ],
    "title" : "init(_:_:)",
    "usr" : "s:13ComplexModule0A0VyACyxGx_xtcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between ",
        "type" : "text"
      },
      {
        "code" : "0",
        "type" : "codeVoice"
      },
      {
        "text" : " and to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/scale(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/scale(_:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE5scale_2to10OutputTypeQzSg05InputG0Qz_AGtF"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tickscale\/ticks(rangelower:rangehigher:)-4ug0i",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/ticks(rangeLower:rangeHigher:)-4ug0i",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASi9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySi06OutputF0QzGGAL_ALtF"
  },
  {
    "abstract" : [
      {
        "text" : "The reciprocal of this value, if it can be computed without undue",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "overflow or underflow.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/reciprocal-1twmy",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-1twmy",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:13ComplexModule0A0V10reciprocalACyxGSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Sine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/sin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/sin(_:)",
    "taskGroups" : [

    ],
    "title" : "sin(_:)",
    "usr" : "s:13ComplexModule0A0V3sinyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "=="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/==(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/==(_:_:)",
    "taskGroups" : [

    ],
    "title" : "==(_:_:)",
    "usr" : "s:13ComplexModule0A0V2eeoiySbACyxG_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/atanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/atanh(_:)",
    "taskGroups" : [

    ],
    "title" : "atanh(_:)",
    "usr" : "s:13ComplexModule0A0V5atanhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:13SwiftVizScale06LinearC0V12domainHigherxvp"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:13SwiftVizScale05PowerC0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "debugDescription"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/debugdescription",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/debugDescription",
    "taskGroups" : [

    ],
    "title" : "debugDescription",
    "usr" : "s:13ComplexModule0A0V16debugDescriptionSSvp"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is subnormal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isSubnormal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/issubnormal",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isSubnormal",
    "taskGroups" : [

    ],
    "title" : "isSubnormal",
    "usr" : "s:13ComplexModule0A0V11isSubnormalSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "exp(x) - 1, computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "expMinusOne"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)",
    "taskGroups" : [

    ],
    "title" : "expMinusOne(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP11expMinusOneyxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/algebraicfield-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AlgebraicField-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-78ojs",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-94u8w",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/=(_:_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-1twmy",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-5ielo"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "AlgebraicField Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "A type that has elementary functions available.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ElementaryFunctions"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/acos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/acosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/asin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/asinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/atan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/atanh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/cos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/cosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/exp(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/log(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/log(onePlus:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-2qmul",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-9imp6",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/root(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/sin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/sinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/sqrt(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/tan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/tanh(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "ElementaryFunctions",
    "usr" : "s:10RealModule19ElementaryFunctionsP"
  },
  {
    "abstract" : [
      {
        "text" : "A type of scale that provides tick values from the domain it represents.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "TickScale"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tickscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/desiredTicks"
        ],
        "title" : "Inspecting Tick Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/tickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/ticks(rangeLower:rangeHigher:)-15rnt",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/ticks(rangeLower:rangeHigher:)-4ug0i",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/ticks(rangeLower:rangeHigher:)-5hnpv"
        ],
        "title" : "Generating Ticks for a Scale"
      }
    ],
    "title" : "TickScale",
    "usr" : "s:13SwiftVizScale04TickC0P"
  },
  {
    "abstract" : [
      {
        "text" : "The squared length ",
        "type" : "text"
      },
      {
        "code" : "(real*real + imaginary*imaginary)",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "lengthSquared"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/lengthsquared",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/lengthSquared",
    "taskGroups" : [

    ],
    "title" : "lengthSquared",
    "usr" : "s:13ComplexModule0A0V13lengthSquaredxvp"
  },
  {
    "abstract" : [
      {
        "text" : "The complex exponential function e^z whose base ",
        "type" : "text"
      },
      {
        "code" : "e",
        "type" : "codeVoice"
      },
      {
        "text" : " is the base of the",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "natural logarithm.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/exp(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/exp(_:)",
    "taskGroups" : [

    ],
    "title" : "exp(_:)",
    "usr" : "s:13ComplexModule0A0V3expyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts the value from the current type into a Double.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "fromDouble"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/convertiblewithdouble\/fromdouble(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble\/fromDouble(_:)",
    "taskGroups" : [

    ],
    "title" : "fromDouble(_:)",
    "usr" : "s:13SwiftVizScale21ConvertibleWithDoubleP04fromF0yxSdFZ"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is finite.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isFinite"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isfinite",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isFinite",
    "taskGroups" : [

    ],
    "title" : "isFinite",
    "usr" : "s:13ComplexModule0A0V8isFiniteSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "The multiplicative identity, with real part one and imaginary part zero.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "one"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/one",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/one",
    "taskGroups" : [

    ],
    "title" : "one",
    "usr" : "s:13ComplexModule0A0V3oneACyxGvpZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Tangent",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/tan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/tan(_:)",
    "taskGroups" : [

    ],
    "title" : "tan(_:)",
    "usr" : "s:13ComplexModule0A0V3tanyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/exponent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/exponent",
    "taskGroups" : [

    ],
    "title" : "exponent",
    "usr" : "s:13SwiftVizScale05PowerC0V8exponentSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/domaincontains(_:)-3senz",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainContains(_:)-3senz",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:13SwiftVizScale0C0P14domainContainsySb9InputTypeQzF"
  },
  {
    "abstract" : [
      {
        "text" : "The nth root of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "root"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/root(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/root(_:_:)",
    "taskGroups" : [

    ],
    "title" : "root(_:_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4rootyxx_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "2^x",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp2"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/exp2(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/exp2(_:)",
    "taskGroups" : [

    ],
    "title" : "exp2(_:)",
    "usr" : "s:10RealModule0A9FunctionsP4exp2yxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "encode"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s7EncoderP",
        "text" : "Encoder"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/encode(to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/encode(to:)",
    "taskGroups" : [

    ],
    "title" : "encode(to:)",
    "usr" : "s:13ComplexModule0A0VAASERzrlE6encode2toys7Encoder_p_tKF"
  },
  {
    "abstract" : [
      {
        "text" : "log(1 + x), computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "onePlus"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/log(oneplus:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/log(onePlus:)",
    "taskGroups" : [

    ],
    "title" : "log(onePlus:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3log7onePlusxx_tFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The logarithm of the absolute value of the gamma function, log(|Γ(x)|).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "logGamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/loggamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/logGamma(_:)",
    "taskGroups" : [

    ],
    "title" : "logGamma(_:)",
    "usr" : "s:10RealModule0A9FunctionsP8logGammayxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/\/(_:_:)-78ojs",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/(_:_:)-78ojs",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:13ComplexModule0A0V1doiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) reciprocal (multiplicative inverse) of this number,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "if it is representable.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/reciprocal",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/reciprocal",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule0A0PAAE10reciprocalxSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new power scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/init(from:to:exponent:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(from:to:exponent:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:exponent:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale05PowerC0V4from2to8exponent9transform12desiredTicksACyxq_Gx_xSdAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The imaginary unit.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "i"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/i",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/i",
    "taskGroups" : [

    ],
    "title" : "i",
    "usr" : "s:13ComplexModule0A0V1iACyxGvpZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/tickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-5zjwj",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-8w4by",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-9y5mw"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a complex value specified with polar coordinates.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "length"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "phase"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(length:phase:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(length:phase:)",
    "taskGroups" : [

    ],
    "title" : "init(length:phase:)",
    "usr" : "s:13ComplexModule0A0V6length5phaseACyxGx_xtcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The product ",
        "type" : "text"
      },
      {
        "code" : "a * b",
        "type" : "codeVoice"
      },
      {
        "text" : " represented as an implicit sum ",
        "type" : "text"
      },
      {
        "code" : "head + tail",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "product"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/product(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/product(_:_:)",
    "taskGroups" : [

    ],
    "title" : "product(_:_:)",
    "usr" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "abstract" : [
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " rounded to the nearest representable value of this type.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0VAASBRzrlEyACyxGACyqd__Gc04RealB00C0Rd__SBRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">)"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:)-80jml",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:)-80jml",
    "taskGroups" : [

    ],
    "title" : "init(_:)",
    "usr" : "s:13ComplexModule0A0VAASBRzrlEyACyxGACyqd__Gc04RealB00C0Rd__SBRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/sinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/sinh(_:)",
    "taskGroups" : [

    ],
    "title" : "sinh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4sinhyxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/elementaryfunctions-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/ElementaryFunctions-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/sqrt(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "ElementaryFunctions Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between ",
        "type" : "text"
      },
      {
        "code" : "0",
        "type" : "codeVoice"
      },
      {
        "text" : " and to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/scale(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE5scale_2to10OutputTypeQzSg05InputG0Qz_AGtF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/tanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/tanh(_:)",
    "taskGroups" : [

    ],
    "title" : "tanh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4tanhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " (inverse cosine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/acos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/acos(_:)",
    "taskGroups" : [

    ],
    "title" : "acos(_:)",
    "usr" : "s:13ComplexModule0A0V4acosyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE22transformAgainstDomainy9InputTypeQzSgAFF"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse tangent) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/atan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/atan(_:)",
    "taskGroups" : [

    ],
    "title" : "atan(_:)",
    "usr" : "s:13ComplexModule0A0V4atanyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The nth root of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "root"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/root(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/root(_:_:)",
    "taskGroups" : [

    ],
    "title" : "root(_:_:)",
    "usr" : "s:13ComplexModule0A0V4rootyACyxGAE_SitFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+=(_:_:)-247oi",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+=(_:_:)-247oi",
    "taskGroups" : [

    ],
    "title" : "+=(_:_:)",
    "usr" : "s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:13SwiftVizScale05PowerC0V11domainLowerxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a nice version of the number that’s visually appealing for chart axis values.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "niceVersion"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "for"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/nicevalue\/niceversion(for:min:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceVersion(for:min:)",
    "taskGroups" : [

    ],
    "title" : "niceVersion(for:min:)",
    "usr" : "s:13SwiftVizScale9NiceValueP11niceVersion3for3min10NumberTypeQzAH_SbtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:13SwiftVizScale03LogC0V12domainHigherxvp"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/\/(_:_:)-9nuhy",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/\/(_:_:)-9nuhy",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldP1doiyxx_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The real part of this complex value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "real"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/real",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/real",
    "taskGroups" : [

    ],
    "title" : "real",
    "usr" : "s:13ComplexModule0A0V4realxvp"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "associatedtype"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale21ConvertibleWithDoubleP",
        "text" : "ConvertibleWithDouble"
      }
    ],
    "kind" : "org.swift.docc.kind.associatedType",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "OutputType",
    "usr" : "s:13SwiftVizScale0C0P10OutputTypeQa"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+(_:)",
    "taskGroups" : [

    ],
    "title" : "+(_:)",
    "usr" : "s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/elementaryfunctions-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/ElementaryFunctions-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/acos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/acosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/asin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/asinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/atan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/atanh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/cos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/cosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/exp(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/expMinusOne(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/log(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/log(onePlus:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/pow(_:_:)-1ylad",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/pow(_:_:)-5a1pd",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/root(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/sin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/sinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/sqrt(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/tan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/tanh(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "ElementaryFunctions Implementations"
  },
  {
    "abstract" : [
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : ", if it can be represented exactly in this type; otherwise ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "?<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "exactly"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0VAASBRzrlE7exactlyACyxGSgACyqd__G_tc04RealB00D0Rd__SBRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">)"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(exactly:)-767k9",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(exactly:)-767k9",
    "taskGroups" : [

    ],
    "title" : "init(exactly:)",
    "usr" : "s:13ComplexModule0A0VAASBRzrlE7exactlyACyxGSgACyqd__G_tc04RealB00D0Rd__SBRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified real part and zero imaginary part.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0VyACyxGqd__cSzRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:)-4csd3",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:)-4csd3",
    "taskGroups" : [

    ],
    "title" : "init(_:)",
    "usr" : "s:13ComplexModule0A0VyACyxGqd__cSzRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:13SwiftVizScale0C0P12domainExtent9InputTypeQzvp"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/invert(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE6invert_2to9InputTypeQzSg06OutputG0Qz_AJtF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/init(_:transform:desiredticks:)-y8hg",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(_:transform:desiredTicks:)-y8hg",
    "taskGroups" : [

    ],
    "title" : "init(_:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale06LinearC0V_9transform12desiredTicksACyxq_Gx_AA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Replaces a with the (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/\/=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/\/=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "\/=(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldP2deoiyyxz_xtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+=(_:_:)-6pgx9",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/+=(_:_:)-6pgx9",
    "taskGroups" : [

    ],
    "title" : "+=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2peoiyyACyxGz_AEtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/domaindatatransform\/!=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/!=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "!=(_:_:)",
    "usr" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13SwiftVizScale19DomainDataTransformO"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:13SwiftVizScale05PowerC0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/acosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/acosh(_:)",
    "taskGroups" : [

    ],
    "title" : "acosh(_:)",
    "usr" : "s:13ComplexModule0A0V5acoshyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : " raised to the nth power.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/pow(_:_:)-5a1pd",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/pow(_:_:)-5a1pd",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:13ComplexModule0A0V3powyACyxGAE_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:13SwiftVizScale06LinearC0V12domainExtentxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/invert(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/invert(_:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE6invert_2to9InputTypeQzSg06OutputG0Qz_AJtF"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Cosine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/cos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/cos(_:)",
    "taskGroups" : [

    ],
    "title" : "cos(_:)",
    "usr" : "s:13ComplexModule0A0V3cosyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "RealFunctions"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/atan2(y:x:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/erf(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/erfc(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/exp10(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/exp2(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/gamma(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/hypot(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/log10(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/log2(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/logGamma(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/signGamma(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "RealFunctions",
    "usr" : "s:10RealModule0A9FunctionsP"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/ticks(rangelower:rangehigher:)-2i6ex",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-2i6ex",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASi9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySi06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-=(_:_:)-7i0xi",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-=(_:_:)-7i0xi",
    "taskGroups" : [

    ],
    "title" : "-=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2seoiyyACyxGz_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Logarithm",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/log(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/log(_:)",
    "taskGroups" : [

    ],
    "title" : "log(_:)",
    "usr" : "s:13ComplexModule0A0V3logyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:13SwiftVizScale06LinearC0V6invert_4from2toxSgq__q_q_tF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "unsafeLengthSquared"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/unsafelengthsquared",
    "platforms" : [

    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/unsafeLengthSquared",
    "taskGroups" : [

    ],
    "title" : "unsafeLengthSquared",
    "usr" : "s:13ComplexModule0A0V19unsafeLengthSquaredxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new tick.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "?("
      },
      {
        "kind" : "externalParam",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "location"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "formatter"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:objc(cs)NSFormatter",
        "text" : "Formatter"
      },
      {
        "kind" : "text",
        "text" : "?)"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/init(value:location:formatter:)-200s1",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)-200s1",
    "taskGroups" : [

    ],
    "title" : "init(value:location:formatter:)",
    "usr" : "s:13SwiftVizScale4TickV5value8location9formatterACyxq_GSgx_q_So11NSFormatterCSgtc10RealModule0I0R_rlufc"
  },
  {
    "abstract" : [
      {
        "text" : "A unique identifier for the tick instance.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4UUIDV",
        "text" : "UUID"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/id-13dv3",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/id-13dv3",
    "taskGroups" : [

    ],
    "title" : "id",
    "usr" : "s:13SwiftVizScale4TickV2id10Foundation4UUIDVvp"
  },
  {
    "abstract" : [
      {
        "text" : "The sign of the gamma function, Γ(x).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "signGamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s17FloatingPointSignO",
        "text" : "FloatingPointSign"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/signgamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/signGamma(_:)",
    "taskGroups" : [

    ],
    "title" : "signGamma(_:)",
    "usr" : "s:10RealModule0A0PAAE9signGammays17FloatingPointSignOxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The sign of the gamma function, Γ(x).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "signGamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s17FloatingPointSignO",
        "text" : "FloatingPointSign"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/signgamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/signGamma(_:)",
    "taskGroups" : [

    ],
    "title" : "signGamma(_:)",
    "usr" : "s:10RealModule0A9FunctionsP9signGammays17FloatingPointSignOxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "negate"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/negate()",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/negate()",
    "taskGroups" : [

    ],
    "title" : "negate()",
    "usr" : "s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/decodable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Decodable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(from:)"
        ],
        "title" : "Initializers"
      }
    ],
    "title" : "Decodable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/acosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/acosh(_:)",
    "taskGroups" : [

    ],
    "title" : "acosh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP5acoshyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between ",
        "type" : "text"
      },
      {
        "code" : "0",
        "type" : "codeVoice"
      },
      {
        "text" : " and to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/scale(_:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:to:)",
    "usr" : "s:13SwiftVizScale0C0PAAE5scale_2to10OutputTypeQzSg05InputG0Qz_AGtF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tickValues"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/tickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/tickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "tickValues(_:from:to:)",
    "usr" : "s:13SwiftVizScale04TickC0PAAE10tickValues_4from2toSayAA0D0Vy9InputTypeQz06OutputJ0QzGGSayAJG_A2LtF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Replaces a with the (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/\/=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/\/=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "\/=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2deoiyyACyxGz_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Square_root",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sqrt"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/sqrt(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/sqrt(_:)",
    "taskGroups" : [

    ],
    "title" : "sqrt(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4sqrtyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tickValues"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/tickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/tickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "tickValues(_:from:to:)",
    "usr" : "s:13SwiftVizScale04TickC0PAAE10tickValues_4from2toSayAA0D0Vy9InputTypeQz06OutputJ0QzGGSayAJG_A2LtF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tickscale\/ticks(rangelower:rangehigher:)-15rnt",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/ticks(rangeLower:rangeHigher:)-15rnt",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASd9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySd06OutputF0QzGGAL_ALtF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/init(_:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/init(_:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(_:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale03LogC0V_9transform12desiredTicksACyxq_GSNyxG_AA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/ticks(rangelower:rangehigher:)-8w4by",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-8w4by",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASd9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySd06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale06LinearC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:13SwiftVizScale06LinearC0V11domainLowerxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/ticks(rangelower:rangehigher:)-2bosk",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-2bosk",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASd9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySd06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The imaginary part of this complex value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "imaginary"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/imaginary",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/imaginary",
    "taskGroups" : [

    ],
    "title" : "imaginary",
    "usr" : "s:13ComplexModule0A0V9imaginaryxvp"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of methods for dealing with data transformation when displaying against a scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/domaindatatransform",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/none",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/clamp",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/drop"
        ],
        "title" : "Domain Transform Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/!=(_:_:)"
        ],
        "title" : "Comparing Transform Settings"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/Equatable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "DomainDataTransform",
    "usr" : "s:13SwiftVizScale19DomainDataTransformO"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/tanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/tanh(_:)",
    "taskGroups" : [

    ],
    "title" : "tanh(_:)",
    "usr" : "s:13ComplexModule0A0V4tanhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Data processed against a scale is dropped if the value is outside of the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "drop"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/domaindatatransform\/drop",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/drop",
    "taskGroups" : [

    ],
    "title" : "DomainDataTransform.drop",
    "usr" : "s:13SwiftVizScale19DomainDataTransformO4dropyA2CmF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/-(_:)",
    "taskGroups" : [

    ],
    "title" : "-(_:)",
    "usr" : "s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "A power scale created with a continuous input domain that provides methods to convert values within that domain to an output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "PowerScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(from:to:exponent:transform:desiredTicks:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(_:exponent:transform:desiredTicks:)-3kwxa",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(_:exponent:transform:desiredTicks:)-6fsiw"
        ],
        "title" : "Creating Logrithmic Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformType",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/desiredTicks"
        ],
        "title" : "Inspecting Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:to:)"
        ],
        "title" : "Converting Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformAgainstDomain(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainContains(_:)"
        ],
        "title" : "Comparing Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-5zjwj",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-8w4by",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-9y5mw",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/tickValues(_:from:to:)"
        ],
        "title" : "Creating Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/exponent"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "PowerScale",
    "usr" : "s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new logarithmic scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale03LogC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale03LogC0V4from2to9transform12desiredTicksACyxq_Gx_xAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:13SwiftVizScale06LinearC0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse sine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/asin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/asin(_:)",
    "taskGroups" : [

    ],
    "title" : "asin(_:)",
    "usr" : "s:13ComplexModule0A0V4asinyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A logarithmic scale created with a continuous input domain that provides methods to convert values within that domain to an output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "LogScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/init(from:to:transform:desiredTicks:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/init(_:transform:desiredTicks:)"
        ],
        "title" : "Creating Logrithmic Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformType",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/desiredTicks"
        ],
        "title" : "Inspecting Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:to:)"
        ],
        "title" : "Converting Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformAgainstDomain(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainContains(_:)"
        ],
        "title" : "Comparing Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-2bosk",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-8sxks",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:)-napq",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/tickValues(_:from:to:)"
        ],
        "title" : "Creating Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LogScale",
    "usr" : "s:13SwiftVizScale03LogC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Implementations should be ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "conservative",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " with the reciprocal property;",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "it is OK to return ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " even in cases where a reciprocal could be",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "represented. For this reason, a default implementation that simply",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "always returns ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " is correct, but conforming types should provide",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "a better implementation if possible.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/reciprocal-6sp2m",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE10reciprocalxSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "A linear scale for transforming and mapping continuous input values within a domain to output values you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "LinearScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(_:transform:desiredTicks:)-5gvku",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(_:transform:desiredTicks:)-y8hg",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Creating Linear Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformType",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/desiredTicks"
        ],
        "title" : "Inspecting Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:to:)"
        ],
        "title" : "Converting Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformAgainstDomain(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainContains(_:)"
        ],
        "title" : "Comparing Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-2i6ex",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-3xaat",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-9vifj",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/tickValues(_:from:to:)"
        ],
        "title" : "Creating Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LinearScale",
    "usr" : "s:13SwiftVizScale06LinearC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Logarithm",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/log(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/log(_:)",
    "taskGroups" : [

    ],
    "title" : "log(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3logyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A type that can be consistently converted to and from a Double.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ConvertibleWithDouble"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/convertiblewithdouble",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble\/fromDouble(_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble\/toDouble()"
        ],
        "title" : "Casting Values to and from Double"
      }
    ],
    "title" : "ConvertibleWithDouble",
    "usr" : "s:13SwiftVizScale21ConvertibleWithDoubleP"
  },
  {
    "abstract" : [
      {
        "text" : "The Euclidean norm (a.k.a. 2-norm, ",
        "type" : "text"
      },
      {
        "code" : "sqrt(real*real + imaginary*imaginary)",
        "type" : "codeVoice"
      },
      {
        "text" : ").",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "length"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/length",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/length",
    "taskGroups" : [

    ],
    "title" : "length",
    "usr" : "s:13ComplexModule0A0V6lengthxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/ticks(rangelower:rangehigher:)-5zjwj",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-5zjwj",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASi9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySi06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "description"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/description",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/description",
    "taskGroups" : [

    ],
    "title" : "description",
    "usr" : "s:13ComplexModule0A0V11descriptionSSvp"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/logscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:13SwiftVizScale03LogC0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/asinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/asinh(_:)",
    "taskGroups" : [

    ],
    "title" : "asinh(_:)",
    "usr" : "s:13ComplexModule0A0V5asinhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new tick",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "location"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "formatter"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:objc(cs)NSFormatter",
        "text" : "Formatter"
      },
      {
        "kind" : "text",
        "text" : "?)"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tick\/init(value:location:formatter:)-cjxk",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)-cjxk",
    "taskGroups" : [

    ],
    "title" : "init(value:location:formatter:)",
    "usr" : "s:13SwiftVizScale4TickV5value8location9formatterACyxq_Gx_q_So11NSFormatterCSgtcfc"
  },
  {
    "abstract" : [
      {
        "text" : "A type that models the real numbers.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Real"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/cosMinusOne(_:)"
        ],
        "title" : "Type Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Real\/ElementaryFunctions-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "Real",
    "usr" : "s:10RealModule0A0P"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/numeric-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Numeric-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/*(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/*=(_:_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(exactly:)-282ck"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/magnitude"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:relativeTolerance:norm:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Numeric Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a nice minimum value for a given range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "niceMinimumValueForRange"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "max"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/nicevalue\/niceminimumvalueforrange(min:max:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceMinimumValueForRange(min:max:)",
    "taskGroups" : [

    ],
    "title" : "niceMinimumValueForRange(min:max:)",
    "usr" : "s:13SwiftVizScale9NiceValueP011niceMinimumE8ForRange3min3max10NumberTypeQzAH_AHtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of components to provide structures that support data visualization.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble"
        ],
        "title" : "Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale"
        ],
        "title" : "Ticks"
      }
    ],
    "title" : "SwiftVizScale",
    "usr" : "SwiftVizScale"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:13SwiftVizScale05PowerC0V12domainExtentxvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/asinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/asinh(_:)",
    "taskGroups" : [

    ],
    "title" : "asinh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP5asinhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The complex conjugate of this value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "conjugate"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/conjugate",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/conjugate",
    "taskGroups" : [

    ],
    "title" : "conjugate",
    "usr" : "s:13ComplexModule0A0V9conjugateACyxGvp"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:13SwiftVizScale0C0P12domainHigher9InputTypeQzvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/ticks(rangelower:rangehigher:)-9y5mw",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:)-9y5mw",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASf9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySf06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale05PowerC0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/linearscale\/ticks(rangelower:rangehigher:)-9vifj",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:)-9vifj",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASf9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySf06OutputF0QzGGAL_ALtF::SYNTHESIZED::s:13SwiftVizScale06LinearC0V"
  },
  {
    "abstract" : [
      {
        "text" : "The error function evaluated at ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "erf"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/erf(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/RealFunctions\/erf(_:)",
    "taskGroups" : [

    ],
    "title" : "erf(_:)",
    "usr" : "s:10RealModule0A9FunctionsP3erfyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:13SwiftVizScale0C0P5scale_4from2to10OutputTypeQzSg05InputH0Qz_A2HtF"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a power function and maps the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:13SwiftVizScale05PowerC0V5scale_4from2toSfSgx_S2ftF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale05PowerC0V9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/powerscale\/init(_:exponent:transform:desiredticks:)-6fsiw",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(_:exponent:transform:desiredTicks:)-6fsiw",
    "taskGroups" : [

    ],
    "title" : "init(_:exponent:transform:desiredTicks:)",
    "usr" : "s:13SwiftVizScale05PowerC0V_8exponent9transform12desiredTicksACyxq_Gx_SdAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "A complex number represented by real and imaginary parts.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:)-4csd3",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:)-5aesj",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:)-80jml",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(exactly:)-767k9",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(imaginary:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/init(length:phase:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/canonicalized",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/conjugate",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/imaginary",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isFinite",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isNormal",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isSubnormal",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isZero",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/length",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/lengthSquared",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/normalized",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/phase",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/polar",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/real",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/unsafeLengthSquared"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/i",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/infinity",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/one"
        ],
        "title" : "Type Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AdditiveArithmetic-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/AlgebraicField-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/CustomDebugStringConvertible-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/CustomStringConvertible-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Decodable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/ElementaryFunctions-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Encodable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Equatable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/ExpressibleByIntegerLiteral-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Hashable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/Numeric-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/SignedNumeric-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "Complex",
    "usr" : "s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/cosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/cosh(_:)",
    "taskGroups" : [

    ],
    "title" : "cosh(_:)",
    "usr" : "s:13ComplexModule0A0V4coshyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Tangent",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/tan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/tan(_:)",
    "taskGroups" : [

    ],
    "title" : "tan(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3tanyxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/domaindatatransform\/equatable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/Equatable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/!=(_:_:)"
        ],
        "title" : "Operators"
      }
    ],
    "title" : "Equatable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Sine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/sin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/sin(_:)",
    "taskGroups" : [

    ],
    "title" : "sin(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3sinyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The phase (angle, or “argument”).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "phase"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/phase",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/phase",
    "taskGroups" : [

    ],
    "title" : "phase",
    "usr" : "s:13ComplexModule0A0V5phasexvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse tangent) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/atan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/ElementaryFunctions\/atan(_:)",
    "taskGroups" : [

    ],
    "title" : "atan(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4atanyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A namespace for “augmented arithmetic” operations for types conforming to",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "code" : "Real",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Augmented"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/fastTwoSum(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/product(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/sum(large:small:)",
          "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/twoProdFMA(_:_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "Augmented",
    "usr" : "s:10RealModule9AugmentedO"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "associatedtype"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale21ConvertibleWithDoubleP",
        "text" : "ConvertibleWithDouble"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale9NiceValueP",
        "text" : "NiceValue"
      }
    ],
    "kind" : "org.swift.docc.kind.associatedType",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/InputType",
    "taskGroups" : [

    ],
    "title" : "InputType",
    "usr" : "s:13SwiftVizScale0C0P9InputTypeQa"
  },
  {
    "abstract" : [
      {
        "text" : "exp(y * log(x)) computed with additional internal precision.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/pow(_:_:)-1ylad",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/pow(_:_:)-1ylad",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:13ComplexModule0A0V3powyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Test if ",
        "type" : "text"
      },
      {
        "code" : "self",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " are approximately equal with specified",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "tolerances and norm.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isApproximatelyEqual"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "absoluteTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "relativeTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "norm"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)",
    "taskGroups" : [

    ],
    "title" : "isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)",
    "usr" : "s:s18AdditiveArithmeticP10RealModuleE20isApproximatelyEqual2to17absoluteTolerance08relativeJ04normSbx_qd__qd__qd__xXEtSFRd__lF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Implementations should be ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "conservative",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " with the reciprocal property;",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "it is OK to return ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " even in cases where a reciprocal could be",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "represented. For this reason, a default implementation that simply",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "always returns ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " is correct, but conforming types should provide",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "a better implementation if possible.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/reciprocal-5ielo",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/ComplexModule\/Complex\/reciprocal-5ielo",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE10reciprocalxSgvp::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts back from the output ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "range",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " to a value within the input ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "domain",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:13SwiftVizScale0C0P6invert_4from2to9InputTypeQzSg06OutputH0Qz_A2KtF"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/scale\/domaincontains(_:)-73w51",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domainContains(_:)-73w51",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:13SwiftVizScale0C0PAAE14domainContainsySb9InputTypeQzF"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftvizscale\/tickscale\/ticks(rangelower:rangehigher:)-5hnpv",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/TickScale\/ticks(rangeLower:rangeHigher:)-5hnpv",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:13SwiftVizScale04TickC0PAASf9InputTypeRtzrlE5ticks10rangeLower0H6HigherSayAA0D0VySf06OutputF0QzGGAL_ALtF"
  },
  {
    "abstract" : [
      {
        "text" : "The sum ",
        "type" : "text"
      },
      {
        "code" : "a + b",
        "type" : "codeVoice"
      },
      {
        "text" : " represented as an implicit sum ",
        "type" : "text"
      },
      {
        "code" : "head + tail",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sum"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "large"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "small"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/sum(large:small:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/RealModule\/Augmented\/sum(large:small:)",
    "taskGroups" : [

    ],
    "title" : "sum(large:small:)",
    "usr" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ"
  }
]