{"interfaceLanguages":{"swift":[{"children":[{"title":"Continuous Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/makingandusingscales","title":"Making and Using Scales","type":"article"},{"children":[{"title":"Inspecting Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/domainlower","title":"let domainLower: InputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/domainhigher","title":"let domainHigher: InputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/transformtype","title":"var transformType: DomainDataTransform","type":"property"},{"children":[{"title":"Domain Transform Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/clamp","title":"case clamp","type":"case"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/drop","title":"case drop","type":"case"},{"title":"Comparing Transform Settings","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftvizscale\/domaindatatransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/domaindatatransform","title":"DomainDataTransform","type":"enum"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scaletype","title":"let scaleType: ContinuousScaleType","type":"property"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/log","title":"case log","type":"case"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/power(_:)","title":"case power(Double)","type":"case"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/radial","title":"case radial","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftvizscale\/continuousscaletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/continuousscaletype","title":"ContinuousScaleType","type":"enum"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/desiredticks","title":"let desiredTicks: Int","type":"property"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/reversed","title":"let reversed: Bool","type":"property"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/rangehigher","title":"let rangeHigher: OutputType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/rangelower","title":"let rangeLower: OutputType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/description","title":"var description: String","type":"property"},{"title":"Updating Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/domain(_:)-4f5d3","title":"func domain(ClosedRange<InputType>) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/domain(_:)-6auzq","title":"func domain([InputType]) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/domain(_:nice:)","title":"func domain([InputType], nice: Bool) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/domain(lower:higher:)","title":"func domain(lower: InputType, higher: InputType) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scaletype(_:)","title":"func scaleType(ContinuousScaleType) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/range(_:)","title":"func range(ClosedRange<OutputType>) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/range(lower:higher:)","title":"func range(lower: OutputType, higher: OutputType) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/range(reversed:_:)","title":"func range(reversed: Bool, ClosedRange<OutputType>) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/range(reversed:lower:higher:)","title":"func range(reversed: Bool, lower: OutputType, higher: OutputType) -> ContinuousScale<InputType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/transform(_:)","title":"func transform(DomainDataTransform) -> ContinuousScale<InputType, OutputType>","type":"method"},{"title":"Converting Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scale(_:)","title":"func scale(InputType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scale(_:from:to:)","title":"func scale(InputType, from: OutputType, to: OutputType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scale(_:reversed:from:to:)","title":"func scale(InputType, reversed: Bool, from: OutputType, to: OutputType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scale(_:to:)","title":"func scale(InputType, to: OutputType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/scale(_:to:reversed:)","title":"func scale(InputType, to: OutputType, reversed: Bool) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/invert(_:)","title":"func invert(OutputType) -> InputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/invert(_:from:to:)","title":"func invert(OutputType, from: OutputType, to: OutputType) -> InputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/invert(_:reversed:from:to:)","title":"func invert(OutputType, reversed: Bool, from: OutputType, to: OutputType) -> InputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/invert(_:to:)","title":"func invert(OutputType, to: OutputType) -> InputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/invert(_:to:reversed:)","title":"func invert(OutputType, to: OutputType, reversed: Bool) -> InputType?","type":"method"},{"title":"Comparing Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/transformagainstdomain(_:)","title":"func transformAgainstDomain(InputType) -> InputType?","type":"method"},{"title":"Creating Ticks","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/defaulttickvalues(formatter:)","title":"func defaultTickValues(formatter: Formatter?) -> [String]","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/ticks(rangelower:rangehigher:formatter:)","title":"func ticks(rangeLower: OutputType, rangeHigher: OutputType, formatter: Formatter?) -> [Tick<OutputType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/ticks(reversed:rangelower:rangehigher:formatter:)","title":"func ticks(reversed: Bool, rangeLower: OutputType, rangeHigher: OutputType, formatter: Formatter?) -> [Tick<OutputType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/ticksfromvalues(_:reversed:from:to:formatter:)","title":"func ticksFromValues([InputType], reversed: Bool, from: OutputType, to: OutputType, formatter: Formatter?) -> [Tick<OutputType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/validtickvalues(_:formatter:)","title":"func validTickValues([InputType], formatter: Formatter?) -> [String]","type":"method"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/init(_:type:transform:desiredticks:reversed:rangelower:rangehigher:)-2rwdv","title":"init(InputType, type: ContinuousScaleType, transform: DomainDataTransform, desiredTicks: Int, reversed: Bool, rangeLower: OutputType?, rangeHigher: OutputType?)","type":"init"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/init(_:type:transform:desiredticks:reversed:rangelower:rangehigher:)-9hcw4","title":"init(ClosedRange<InputType>, type: ContinuousScaleType, transform: DomainDataTransform, desiredTicks: Int, reversed: Bool, rangeLower: OutputType?, rangeHigher: OutputType?)","type":"init"},{"path":"\/documentation\/swiftvizscale\/continuousscale\/init(from:to:type:transform:desiredticks:reversed:rangelower:rangehigher:)","title":"init(from: InputType, to: InputType, type: ContinuousScaleType, transform: DomainDataTransform, desiredTicks: Int, reversed: Bool, rangeLower: OutputType?, rangeHigher: OutputType?)","type":"init"}],"path":"\/documentation\/swiftvizscale\/continuousscale","title":"ContinuousScale","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/log","title":"case log","type":"case"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/power(_:)","title":"case power(Double)","type":"case"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/radial","title":"case radial","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/continuousscaletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/continuousscaletype","title":"ContinuousScaleType","type":"enum"},{"children":[{"title":"Domain Transform Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/clamp","title":"case clamp","type":"case"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/drop","title":"case drop","type":"case"},{"title":"Comparing Transform Settings","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/domaindatatransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/domaindatatransform","title":"DomainDataTransform","type":"enum"},{"title":"Discrete Scales","type":"groupMarker"},{"children":[{"title":"Creating a Band Scale","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/init(_:paddinginner:paddingouter:round:reversed:from:to:)","title":"init([CategoryType], paddingInner: OutputType, paddingOuter: OutputType, round: Bool, reversed: Bool, from: OutputType?, to: OutputType?)","type":"init"},{"title":"Updating Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/domain(_:)","title":"func domain([CategoryType]) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/round(_:)","title":"func round(Bool) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/paddinginner(_:)","title":"func paddingInner(OutputType) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/paddingouter(_:)","title":"func paddingOuter(OutputType) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/range(_:)","title":"func range(ClosedRange<OutputType>) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/range(lower:higher:)","title":"func range(lower: OutputType, higher: OutputType) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/range(reversed:_:)","title":"func range(reversed: Bool, ClosedRange<OutputType>) -> BandScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/range(reversed:lower:higher:)","title":"func range(reversed: Bool, lower: OutputType, higher: OutputType) -> BandScale<CategoryType, OutputType>","type":"method"},{"title":"Inspecting Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/domain","title":"let domain: [CategoryType]","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/round","title":"let round: Bool","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/paddinginner","title":"let paddingInner: OutputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/paddingouter","title":"let paddingOuter: OutputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/reversed","title":"let reversed: Bool","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/rangelower","title":"let rangeLower: OutputType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/rangehigher","title":"let rangeHigher: OutputType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/bandscale\/scaletype","title":"let scaleType: DiscreteScaleType","type":"property"},{"title":"Converting Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/scale(_:)","title":"func scale(CategoryType) -> Band<CategoryType, OutputType>?","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/scale(_:from:to:)","title":"func scale(CategoryType, from: OutputType, to: OutputType) -> Band<CategoryType, OutputType>?","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/scale(_:reversed:from:to:)","title":"func scale(CategoryType, reversed: Bool, from: OutputType, to: OutputType) -> Band<CategoryType, OutputType>?","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/invert(_:)-63wv8","title":"func invert(OutputType) -> CategoryType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/invert(_:)-9z1xu","title":"func invert(Band<CategoryType, OutputType>) -> CategoryType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/invert(_:from:to:)","title":"func invert(OutputType, from: OutputType, to: OutputType) -> CategoryType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/invert(_:reversed:from:to:)","title":"func invert(OutputType, reversed: Bool, from: OutputType, to: OutputType) -> CategoryType?","type":"method"},{"title":"Creating Ticks","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/ticks(rangelower:rangehigher:formatter:)","title":"func ticks(rangeLower: BandScale<CategoryType, OutputType>.RangeType, rangeHigher: BandScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<BandScale<CategoryType, OutputType>.RangeType>]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftvizscale\/bandscale\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/bandscale\/defaulttickvalues(formatter:)","title":"func defaultTickValues(formatter: Formatter?) -> [String]","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/ticks(rangelower:rangehigher:formatter:)","title":"func ticks(rangeLower: BandScale<CategoryType, OutputType>.RangeType, rangeHigher: BandScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<BandScale<CategoryType, OutputType>.RangeType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/bandscale\/ticks(reversed:rangelower:rangehigher:formatter:)","title":"func ticks(reversed: Bool, rangeLower: BandScale<CategoryType, OutputType>.RangeType, rangeHigher: BandScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<BandScale<CategoryType, OutputType>.RangeType>]","type":"method"}],"path":"\/documentation\/swiftvizscale\/bandscale\/discretescale-implementations","title":"DiscreteScale Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/bandscale","title":"BandScale","type":"struct"},{"children":[{"title":"Inspecting a Band","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/band\/higher","title":"let higher: RangeType","type":"property"},{"path":"\/documentation\/swiftvizscale\/band\/middle","title":"var middle: RangeType","type":"property"},{"path":"\/documentation\/swiftvizscale\/band\/lower","title":"let lower: RangeType","type":"property"},{"path":"\/documentation\/swiftvizscale\/band\/value","title":"let value: EnclosedType","type":"property"}],"path":"\/documentation\/swiftvizscale\/band","title":"Band","type":"struct"},{"children":[{"title":"Creating a Band Scale","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/init(_:padding:round:reversed:from:to:)","title":"init([CategoryType], padding: OutputType, round: Bool, reversed: Bool, from: OutputType?, to: OutputType?)","type":"init"},{"title":"Updating Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/domain(_:)","title":"func domain([CategoryType]) -> PointScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/round(_:)","title":"func round(Bool) -> PointScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/padding(_:)","title":"func padding(OutputType) -> PointScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/range(_:)","title":"func range(ClosedRange<OutputType>) -> PointScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/range(lower:higher:)","title":"func range(lower: OutputType, higher: OutputType) -> PointScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/range(reversed:_:)","title":"func range(reversed: Bool, ClosedRange<OutputType>) -> PointScale<CategoryType, OutputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/range(reversed:lower:higher:)","title":"func range(reversed: Bool, lower: OutputType, higher: OutputType) -> PointScale<CategoryType, OutputType>","type":"method"},{"title":"Inspecting Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/domain","title":"let domain: [CategoryType]","type":"property"},{"path":"\/documentation\/swiftvizscale\/pointscale\/round","title":"let round: Bool","type":"property"},{"path":"\/documentation\/swiftvizscale\/pointscale\/padding","title":"let padding: OutputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/pointscale\/reversed","title":"let reversed: Bool","type":"property"},{"path":"\/documentation\/swiftvizscale\/pointscale\/rangelower","title":"let rangeLower: OutputType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/pointscale\/rangehigher","title":"let rangeHigher: OutputType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/pointscale\/scaletype","title":"let scaleType: DiscreteScaleType","type":"property"},{"title":"Converting Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/scale(_:)","title":"func scale(CategoryType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/scale(_:from:to:)","title":"func scale(CategoryType, from: OutputType, to: OutputType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/scale(_:reversed:from:to:)","title":"func scale(CategoryType, reversed: Bool, from: OutputType, to: OutputType) -> OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/invert(_:)","title":"func invert(OutputType) -> CategoryType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/invert(_:from:to:)","title":"func invert(OutputType, from: OutputType, to: OutputType) -> CategoryType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/invert(_:reversed:from:to:)","title":"func invert(OutputType, reversed: Bool, from: OutputType, to: OutputType) -> CategoryType?","type":"method"},{"title":"Creating Ticks","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/ticks(rangelower:rangehigher:formatter:)","title":"func ticks(rangeLower: PointScale<CategoryType, OutputType>.RangeType, rangeHigher: PointScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<PointScale<CategoryType, OutputType>.RangeType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/ticks(reversed:rangelower:rangehigher:formatter:)","title":"func ticks(reversed: Bool, rangeLower: PointScale<CategoryType, OutputType>.RangeType, rangeHigher: PointScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<PointScale<CategoryType, OutputType>.RangeType>]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftvizscale\/pointscale\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/pointscale\/defaulttickvalues(formatter:)","title":"func defaultTickValues(formatter: Formatter?) -> [String]","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/ticks(rangelower:rangehigher:formatter:)","title":"func ticks(rangeLower: PointScale<CategoryType, OutputType>.RangeType, rangeHigher: PointScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<PointScale<CategoryType, OutputType>.RangeType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/pointscale\/ticks(reversed:rangelower:rangehigher:formatter:)","title":"func ticks(reversed: Bool, rangeLower: PointScale<CategoryType, OutputType>.RangeType, rangeHigher: PointScale<CategoryType, OutputType>.RangeType, formatter: Formatter?) -> [Tick<PointScale<CategoryType, OutputType>.RangeType>]","type":"method"}],"path":"\/documentation\/swiftvizscale\/pointscale\/discretescale-implementations","title":"DiscreteScale Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/pointscale","title":"PointScale","type":"struct"},{"children":[{"title":"Inspecting Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/discretescale\/domain","title":"var domain: [Self.InputType]","type":"property"},{"path":"\/documentation\/swiftvizscale\/discretescale\/rangehigher","title":"var rangeHigher: Self.RangeType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/discretescale\/rangelower","title":"var rangeLower: Self.RangeType?","type":"property"},{"path":"\/documentation\/swiftvizscale\/discretescale\/scaletype","title":"var scaleType: DiscreteScaleType","type":"property"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/discretescaletype\/band","title":"case band","type":"case"},{"path":"\/documentation\/swiftvizscale\/discretescaletype\/point","title":"case point","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/discretescaletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftvizscale\/discretescaletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/discretescaletype","title":"DiscreteScaleType","type":"enum"},{"title":"Creating Ticks","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/discretescale\/ticks(rangelower:rangehigher:formatter:)","title":"func ticks(rangeLower: Self.RangeType, rangeHigher: Self.RangeType, formatter: Formatter?) -> [Tick<Self.RangeType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/discretescale\/ticks(reversed:rangelower:rangehigher:formatter:)","title":"func ticks(reversed: Bool, rangeLower: Self.RangeType, rangeHigher: Self.RangeType, formatter: Formatter?) -> [Tick<Self.RangeType>]","type":"method"},{"path":"\/documentation\/swiftvizscale\/discretescale\/defaulttickvalues(formatter:)","title":"func defaultTickValues(formatter: Formatter?) -> [String]","type":"method"}],"path":"\/documentation\/swiftvizscale\/discretescale","title":"DiscreteScale","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/discretescaletype\/band","title":"case band","type":"case"},{"path":"\/documentation\/swiftvizscale\/discretescaletype\/point","title":"case point","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/discretescaletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/discretescaletype","title":"DiscreteScaleType","type":"enum"},{"title":"Sequential Scales","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/init(lower:higher:reversed:interpolator:)","title":"init(lower: InputType, higher: InputType, reversed: Bool, interpolator: ColorInterpolator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/domainhigher","title":"let domainHigher: InputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/domainlower","title":"let domainLower: InputType","type":"property"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/reversed","title":"let reversed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/domain(_:)-40h9i","title":"func domain(ClosedRange<InputType>) -> SequentialScale<InputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/domain(_:)-7nee8","title":"func domain([InputType]) -> SequentialScale<InputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/domain(_:nice:)","title":"func domain([InputType], nice: Bool) -> SequentialScale<InputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/domain(lower:higher:)","title":"func domain(lower: InputType, higher: InputType) -> SequentialScale<InputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/interpolator(_:)","title":"func interpolator(ColorInterpolator) -> SequentialScale<InputType>","type":"method"},{"path":"\/documentation\/swiftvizscale\/sequentialscale\/scale(_:)","title":"func scale(InputType) -> CGColor","type":"method"}],"path":"\/documentation\/swiftvizscale\/sequentialscale","title":"SequentialScale","type":"struct"},{"children":[{"title":"Sequential Single Hue Color Schemes","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/grays","title":"static let Grays: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/blues","title":"static let Blues: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/greens","title":"static let Greens: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/reds","title":"static let Reds: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/oranges","title":"static let Oranges: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/purples","title":"static let Purples: ColorInterpolator","type":"property"},{"title":"Sequential Multi Hue Color Schemes","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/bugn","title":"static let BuGn: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/bupu","title":"static let BuPu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/gnbu","title":"static let GnBu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/orrd","title":"static let OrRd: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/pubu","title":"static let PuBu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/pubugn","title":"static let PuBuGn: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/purd","title":"static let PuRd: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/rdpu","title":"static let RdPu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/rdpu","title":"static let RdPu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/ylgn","title":"static let YlGn: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/ylgnbu","title":"static let YlGnBu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/ylorbr","title":"static let YlOrBr: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/ylorrd","title":"static let YlOrRd: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/viridis","title":"static let Viridis: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/inferno","title":"static let Inferno: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/magma","title":"static let Magma: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/plasma","title":"static let Plasma: ColorInterpolator","type":"property"},{"title":"Diverging Color Schemes","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/brbg","title":"static let BrBG: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/prgn","title":"static let PrGN: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/piyg","title":"static let PiYG: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/puor","title":"static let PuOR: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/rdbu","title":"static let RdBu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/rdgy","title":"static let RdGy: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/rdylbu","title":"static let RdYlBu: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/rdylgn","title":"static let RdYlGn: ColorInterpolator","type":"property"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/spectral","title":"static let Spectral: ColorInterpolator","type":"property"},{"title":"Creating an Interpolator","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/init(_:)-417qd","title":"init(String)","type":"init"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/init(_:)-5lx8r","title":"init([CGColor])","type":"init"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/init(_:_:)","title":"init(CGColor, CGColor)","type":"init"},{"title":"Mapping values to colors","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/interpolate(_:)","title":"func interpolate(Double) -> CGColor","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/colorinterpolator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftvizscale\/colorinterpolator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftvizscale\/colorinterpolator","title":"ColorInterpolator","type":"struct"},{"children":[{"title":"Interpolating Colors","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/lch\/interpolate(_:_:t:)","title":"static func interpolate(CGColor, CGColor, t: CGFloat) -> CGColor","type":"method"}],"path":"\/documentation\/swiftvizscale\/lch","title":"LCH","type":"enum"},{"title":"Ticks","type":"groupMarker"},{"children":[{"title":"Creating Ticks","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/tick\/init(value:location:formatter:)-62lbu","title":"init<T>(value: T, location: OutputType, formatter: Formatter?)","type":"init"},{"path":"\/documentation\/swiftvizscale\/tick\/init(value:location:formatter:)-8v5fg","title":"init?<T>(value: T, location: OutputType, formatter: Formatter?)","type":"init"},{"title":"Inspecting Ticks","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/tick\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/swiftvizscale\/tick\/rangelocation","title":"let rangeLocation: OutputType","type":"property"}],"path":"\/documentation\/swiftvizscale\/tick","title":"Tick","type":"struct"},{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Updating Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/scale\/domain(_:)","title":"func domain([Self.InputType]) -> Self","type":"method"},{"title":"Converting Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/scale\/scale(_:)","title":"func scale(Self.InputType) -> Self.OutputType?","type":"method"},{"title":"Scale Types","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/scale\/inputtype","title":"InputType","type":"associatedtype"},{"path":"\/documentation\/swiftvizscale\/scale\/outputtype","title":"OutputType","type":"associatedtype"}],"path":"\/documentation\/swiftvizscale\/scale","title":"Scale","type":"protocol"},{"children":[{"title":"Updating Scales","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/scale\/domain(_:)","title":"func domain([Self.InputType]) -> Self","type":"method"},{"path":"\/documentation\/swiftvizscale\/reversiblescale\/range(_:)","title":"func range(ClosedRange<Self.RangeType>) -> Self","type":"method"},{"path":"\/documentation\/swiftvizscale\/reversiblescale\/range(lower:higher:)","title":"func range(lower: Self.RangeType, higher: Self.RangeType) -> Self","type":"method"},{"path":"\/documentation\/swiftvizscale\/reversiblescale\/range(reversed:_:)","title":"func range(reversed: Bool, ClosedRange<Self.RangeType>) -> Self","type":"method"},{"path":"\/documentation\/swiftvizscale\/reversiblescale\/range(reversed:lower:higher:)","title":"func range(reversed: Bool, lower: Self.RangeType, higher: Self.RangeType) -> Self","type":"method"},{"title":"Converting Values","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/scale\/scale(_:)","title":"func scale(Self.InputType) -> Self.OutputType?","type":"method"},{"path":"\/documentation\/swiftvizscale\/reversiblescale\/invert(_:)","title":"func invert(Self.OutputType) -> Self.InputType?","type":"method"},{"title":"Scale Types","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/scale\/inputtype","title":"InputType","type":"associatedtype"},{"path":"\/documentation\/swiftvizscale\/scale\/outputtype","title":"OutputType","type":"associatedtype"},{"path":"\/documentation\/swiftvizscale\/reversiblescale\/rangetype","title":"RangeType","type":"associatedtype"}],"path":"\/documentation\/swiftvizscale\/reversiblescale","title":"ReversibleScale","type":"protocol"},{"children":[{"title":"Generating Nice Numbers","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/nicevalue\/niceversion(for:trendtowardszero:)","title":"static func niceVersion(for: Self.NumberType, trendTowardsZero: Bool) -> Self.NumberType","type":"method"},{"path":"\/documentation\/swiftvizscale\/nicevalue\/numbertype","title":"NumberType","type":"associatedtype"},{"title":"Creating Ranges of Nice Numbers","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/nicevalue\/rangeofnicevalues(min:max:ofsize:)","title":"static func rangeOfNiceValues(min: Self.NumberType, max: Self.NumberType, ofSize: Int) -> [Self.NumberType]","type":"method"},{"path":"\/documentation\/swiftvizscale\/nicevalue\/niceminstepmax(min:max:ofsize:)","title":"static func niceMinStepMax(min: Self.NumberType, max: Self.NumberType, ofSize: Int) -> (Self.NumberType, Self.NumberType, Self.NumberType)","type":"method"},{"path":"\/documentation\/swiftvizscale\/nicevalue\/niceminimumvalueforrange(min:max:)","title":"static func niceMinimumValueForRange(min: Self.NumberType, max: Self.NumberType) -> Self.NumberType","type":"method"}],"path":"\/documentation\/swiftvizscale\/nicevalue","title":"NiceValue","type":"protocol"},{"children":[{"title":"Casting Values to and from Double","type":"groupMarker"},{"path":"\/documentation\/swiftvizscale\/convertiblewithdouble\/fromdouble(_:)","title":"static func fromDouble(Double) -> Self","type":"method"},{"path":"\/documentation\/swiftvizscale\/convertiblewithdouble\/todouble()","title":"func toDouble() -> Double","type":"method"}],"path":"\/documentation\/swiftvizscale\/convertiblewithdouble","title":"ConvertibleWithDouble","type":"protocol"}],"path":"\/documentation\/swiftvizscale","title":"SwiftVizScale","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}