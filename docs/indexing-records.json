[{"rawIndexableTextContent":"The lower value of the range into which the discrete values map. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower value of the range into which the discrete values map."},{"rawIndexableTextContent":"The exponent value of the scale. ","kind":"symbol","title":"exponent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/exponent","interfaceLanguage":"swift"}},"summary":"The exponent value of the scale."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"Creates a new linear scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(from:to:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(from:to:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","interfaceLanguage":"swift"}},"summary":"Creates a new linear scale for the upper and lower bounds of the domain you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value mapped from the range back into the domain using an inverse power transform. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"The number of ticks desired when creating the scale.  Discussion This number may not match the number of ticks returned by ticksFromValues(_:reversed:from:to:formatter:)","kind":"symbol","title":"desiredTicks","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/desiredTicks","interfaceLanguage":"swift"}},"summary":"The number of ticks desired when creating the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range.","kind":"symbol","title":"range(reversed:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticks(rangeLower:rangeHigher:formatter:)-7c9l7","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"A logarithmic continuous scale. ","kind":"symbol","title":"ContinuousScaleType.log","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/log","interfaceLanguage":"swift"}},"summary":"A logarithmic continuous scale."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"The upper value of the range into which the discrete values map. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper value of the range into which the discrete values map."},{"rawIndexableTextContent":"Creates a new linear scale for the upper and lower bounds of the domain range you provide.  A range that represents the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-7naj5","interfaceLanguage":"swift"}},"summary":"Creates a new linear scale for the upper and lower bounds of the domain range you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The lower bound for the scale’s domain. The upper bound for the scale’s domain.","kind":"symbol","title":"domain(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domain(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/defaultTickValues(formatter:)-5lwij","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"","kind":"article","title":"ContinuousScaleProtocol Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ContinuousScaleProtocol-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"A continuous scale for transforming and mapping continuous input values within a domain to output values you provide. ","kind":"symbol","title":"ContinuousScale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale","interfaceLanguage":"swift"}},"summary":"A continuous scale for transforming and mapping continuous input values within a domain to output values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Maps the discrete item into a range location.  Return Value A location along the range that indicates a point that matches with the value you provided, or nil if the value isn’t contained by the domain. A discrete item from the list provided as the domain for the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the discrete item into a range location."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/defaultTickValues(formatter:)-63pji","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"A type that can be consistently converted to and from a Double.  Overview The protocol is used to constrain the types used within a scale and provide consistent casting for generic scale methods. This library provides support for the types Int, Float, CGFloat, and Double.","kind":"symbol","title":"ConvertibleWithDouble","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble","interfaceLanguage":"swift"}},"summary":"A type that can be consistently converted to and from a Double."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":" ","kind":"symbol","title":"higher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/higher","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"","kind":"article","title":"ContinuousScaleProtocol Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ContinuousScaleProtocol-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Creates a new logarithmic scale for the upper and lower bounds of the domain range you provide.  The range of the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","interfaceLanguage":"swift"}},"summary":"Creates a new logarithmic scale for the upper and lower bounds of the domain range you provide."},{"rawIndexableTextContent":"The type of discrete scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of discrete scale."},{"rawIndexableTextContent":"A discrete scale that returns a point for the scaled value. ","kind":"symbol","title":"DiscreteScaleType.point","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/point","interfaceLanguage":"swift"}},"summary":"A discrete scale that returns a point for the scaled value."},{"rawIndexableTextContent":"Creates a new tick.  The value at the tick’s location. The location of the tick within the range for a scale. Discussion If the location value you provide is NaN, the initializer returns nil.","kind":"symbol","title":"init(value:location:formatter:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)-8v5fg","interfaceLanguage":"swift"}},"summary":"Creates a new tick."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-6ela7","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The lower bounding value of the range to transform to. The higher bounding value of the range to transform to. Discussion Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A replica of the scale, with new domain values. The lower bound for the scale’s domain. The upper bound for the scale’s domain.","kind":"symbol","title":"domain(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domain(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:formatter:)-9hch1","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the range you provide.  The range of the values into which the discrete values map.","kind":"symbol","title":"range(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the range you provide."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"An array of the types the scale maps into. ","kind":"symbol","title":"domain","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/domain","interfaceLanguage":"swift"}},"summary":"An array of the types the scale maps into."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.","kind":"symbol","title":"transformType","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/transformType","interfaceLanguage":"swift"}},"summary":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range."},{"rawIndexableTextContent":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.","kind":"symbol","title":"transformType","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/transformType","interfaceLanguage":"swift"}},"summary":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. Discussion Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.","kind":"symbol","title":"transformType","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformType","interfaceLanguage":"swift"}},"summary":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domainContains(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  Return Value A list of tick values validated against the domain, and range based on the setting of transformType an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.","kind":"symbol","title":"ticksFromValues(_:reversed:from:to:formatter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticksFromValues(_:reversed:from:to:formatter:)","interfaceLanguage":"swift"}},"summary":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The lower bound for the scale’s domain. The upper bound for the scale’s domain.","kind":"symbol","title":"domain(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns a list of strings that make up the valid tick values out of the set that you provide.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.","kind":"symbol","title":"validTickValues(_:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/validTickValues(_:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns a list of strings that make up the valid tick values out of the set that you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range.","kind":"symbol","title":"range(reversed:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The lower bound for the scale’s domain. The upper bound for the scale’s domain.","kind":"symbol","title":"domain(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domain(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-1oig","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"A type that maps continuous values from an input domain to an output range. ","kind":"symbol","title":"ContinuousScaleProtocol","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol","interfaceLanguage":"swift"}},"summary":"A type that maps continuous values from an input domain to an output range."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The range to apply as the scale’s domain","kind":"symbol","title":"domain(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domain(_:)-8golr","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Processes a value against the scale, potentially constraining or dropping the value.  Return Value An updated value, or nil if the value was dropped. The value to transform against the domain of the scale. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ","kind":"symbol","title":"transformAgainstDomain(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transformAgainstDomain(_:)","interfaceLanguage":"swift"}},"summary":"Processes a value against the scale, potentially constraining or dropping the value."},{"rawIndexableTextContent":"Converts back from the output range to a value within the input domain.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bounding value of the range to transform from. The higher bounding value of the range to transform from. Discussion The inverse of scale(_:from:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Converts back from the output range to a value within the input domain."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/defaultTickValues(formatter:)-2pchk","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Creates a new point scale.  An array of the types the scale maps into. The amount of padding between the points. A Boolean value that indicates the scaled values are returned as rounded values. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"init(_:padding:round:reversed:from:to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/init(_:padding:round:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Creates a new point scale."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"domainHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/ticks(rangeLower:rangeHigher:formatter:)-chf4","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The range to apply as the scale’s domain","kind":"symbol","title":"domain(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domain(_:)-9tccc","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"A Boolean value that indicates the scaled values are returned as rounded values. ","kind":"symbol","title":"round","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/round","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates the scaled values are returned as rounded values."},{"rawIndexableTextContent":"Returns a new scale with the domain inferred from the list of values you provide.  Return Value A copy of the scale with the domain values you provide. The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values.","kind":"symbol","title":"domain(_:nice:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domain(_:nice:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain inferred from the list of values you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:formatter:)-2r80c","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"The amount of padding outside of the bands. ","kind":"symbol","title":"paddingOuter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingOuter","interfaceLanguage":"swift"}},"summary":"The amount of padding outside of the bands."},{"rawIndexableTextContent":"Data processed against a scale is dropped if the value is outside of the scale’s domain. ","kind":"symbol","title":"DomainDataTransform.drop","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/drop","interfaceLanguage":"swift"}},"summary":"Data processed against a scale is dropped if the value is outside of the scale’s domain."},{"rawIndexableTextContent":"Returns a nice version of the number that’s visually appealing for chart axis values.  The number to convert into a nice value. A Boolean value that indicates to take the lower, rather than higher, nearest nice number as a result. Discussion The approximation rounds the number to the nearest 1, 2, 5, or 10 multiplied by the exponent of the initial value. These values can be used to expand a range to “round numbers” that are easier to understand than raw, specific values. The values are based on “Nice Numbers for Graph Labels”  in the book “Graphics Gems, Volume 1” by Andrew Glassner. Examples of this algorithm are also available on StackOverflow as nice label algorithm for charts with minimum ticks.","kind":"symbol","title":"niceVersion(for:trendTowardsZero:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceVersion(for:trendTowardsZero:)","interfaceLanguage":"swift"}},"summary":"Returns a nice version of the number that’s visually appealing for chart axis values."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(rangeLower:rangeHigher:formatter:)-8vqf8","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"The distance or length between the upper and lower bounds of the input domain. ","kind":"symbol","title":"domainExtent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainExtent","interfaceLanguage":"swift"}},"summary":"The distance or length between the upper and lower bounds of the input domain."},{"rawIndexableTextContent":"The amount of padding between bands. ","kind":"symbol","title":"padding","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/padding","interfaceLanguage":"swift"}},"summary":"The amount of padding between bands."},{"rawIndexableTextContent":" ","kind":"symbol","title":"scaleType(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scaleType(_:)","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"domainHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"The number of ticks desired when creating the scale.  Discussion This number may not match the number of ticks returned by ticksFromValues(_:reversed:from:to:formatter:)","kind":"symbol","title":"desiredTicks","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/desiredTicks","interfaceLanguage":"swift"}},"summary":"The number of ticks desired when creating the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the range you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range of the values into which the discrete values map.","kind":"symbol","title":"range(reversed:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the range you provide."},{"rawIndexableTextContent":"Converts back from the output range to a value within the input domain.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. Discussion The inverse of scale(_:from:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Converts back from the output range to a value within the input domain."},{"rawIndexableTextContent":"Maps the discrete item into a range location.  Return Value A location along the range that indicates a point that matches with the value you provided, or nil if the value isn’t contained by the domain. A discrete item from the list provided as the domain for the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the discrete item into a range location."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range.","kind":"symbol","title":"range(reversed:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Maps a band back to the category it matches.  Return Value The category that matches the midpoint of the band values. a band providing a pair of range values.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:)-9z1xu","interfaceLanguage":"swift"}},"summary":"Maps a band back to the category it matches."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"domainLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domainLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Returns a new scale with the domain set to span the values you provide.  An array of input values.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:)-6auzq","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to span the values you provide."},{"rawIndexableTextContent":"A type used to indicate the start and stop positions for a band associated with the provided value. ","kind":"symbol","title":"Band","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band","interfaceLanguage":"swift"}},"summary":"A type used to indicate the start and stop positions for a band associated with the provided value."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"The type of continuous scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the domain set to span the values you provide.  An array of input values.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domain(_:)-3xqw2","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to span the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the domain inferred from the list of values you provide.  Return Value A copy of the scale with the domain values you provide. The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values.","kind":"symbol","title":"domain(_:nice:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:nice:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain inferred from the list of values you provide."},{"rawIndexableTextContent":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  Return Value A list of tick values validated against the domain, and range based on the setting of transformType an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.","kind":"symbol","title":"ticksFromValues(_:reversed:from:to:formatter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticksFromValues(_:reversed:from:to:formatter:)","interfaceLanguage":"swift"}},"summary":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain."},{"rawIndexableTextContent":"Returns a new scale with the transform set to the value you provide.  Return Value A copy of the scale with the transform setting you provide. The transform constraint to apply when values fall outside the domain of the scale.","kind":"symbol","title":"transform(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/transform(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the transform set to the value you provide."},{"rawIndexableTextContent":"Processes a value against the scale, potentially constraining or dropping the value.  Return Value An updated value, or nil if the value was dropped. The value to transform against the domain of the scale. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ","kind":"symbol","title":"transformAgainstDomain(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/transformAgainstDomain(_:)","interfaceLanguage":"swift"}},"summary":"Processes a value against the scale, potentially constraining or dropping the value."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"A type that can be converted into an approximate value that is easier to understand.  Overview Types that can provide “nice” values derive from both the Numeric and Comparable protocol. This library provides extensions onto Double, Float, CGFloat, and Int that conform those types to NiceValue.","kind":"symbol","title":"NiceValue","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue","interfaceLanguage":"swift"}},"summary":"A type that can be converted into an approximate value that is easier to understand."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"domainHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domainHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"A linear scale for transforming and mapping continuous input values within a domain to output values you provide. ","kind":"symbol","title":"RadialScale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale","interfaceLanguage":"swift"}},"summary":"A linear scale for transforming and mapping continuous input values within a domain to output values you provide."},{"rawIndexableTextContent":"The description of the scale. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/description","interfaceLanguage":"swift"}},"summary":"The description of the scale."},{"rawIndexableTextContent":"","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-64l6s","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"The number of requested tick marks for the scale. ","kind":"symbol","title":"desiredTicks","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/desiredTicks","interfaceLanguage":"swift"}},"summary":"The number of requested tick marks for the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Maps the discrete item into a band.  Return Value A band that wraps the category found in the domain with start and end values for the range of the band, or nil if the value isn’t contained by the domain. A discrete item from the list provided as the domain for the scale.","kind":"symbol","title":"scale(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Maps the discrete item into a band."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  An array of the types the scale maps into.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/domain(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/ticks(rangeLower:rangeHigher:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"The distance or length between the upper and lower bounds of the input domain. ","kind":"symbol","title":"domainExtent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainExtent","interfaceLanguage":"swift"}},"summary":"The distance or length between the upper and lower bounds of the input domain."},{"rawIndexableTextContent":"An array of the types the scale maps into. ","kind":"symbol","title":"domain","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/domain","interfaceLanguage":"swift"}},"summary":"An array of the types the scale maps into."},{"rawIndexableTextContent":"Returns a new scale with the domain set to span the values you provide.  An array of input values.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domain(_:)-6gsv","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to span the values you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-gtxa","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Returns a new scale with the domain inferred from the list of values you provide.  Return Value A copy of the scale with the domain values you provide. The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values.","kind":"symbol","title":"domain(_:nice:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domain(_:nice:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain inferred from the list of values you provide."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-35so9","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"The type of continuous scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.","kind":"symbol","title":"transformType","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformType","interfaceLanguage":"swift"}},"summary":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range."},{"rawIndexableTextContent":"Maps the discrete item into a band with the range values you provide..  Return Value A band that wraps the category found in the domain with start and end values for the range of the band, or nil if the value isn’t contained by the domain. A discrete item from the list provided as the domain for the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the discrete item into a band with the range values you provide.."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-4j7ih","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/defaultTickValues(formatter:)-8y31r","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to span the values you provide.  An array of input values.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domain(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to span the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range. A Boolean value that indicates if the mapping from domain to range is inverted.","kind":"symbol","title":"range(reversed:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"The number of ticks desired when creating the scale.  Discussion This number may not match the number of ticks returned by ticksFromValues(_:reversed:from:to:formatter:)","kind":"symbol","title":"desiredTicks","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/desiredTicks","interfaceLanguage":"swift"}},"summary":"The number of ticks desired when creating the scale."},{"rawIndexableTextContent":"Creates a new power scale for the upper and lower bounds of the domain range you provide.  The range of the scale’s domain. The exponent for the power transforming, defaulting to 1. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(_:exponent:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(_:exponent:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-3mhh9","interfaceLanguage":"swift"}},"summary":"Creates a new power scale for the upper and lower bounds of the domain range you provide."},{"rawIndexableTextContent":"The upper value of the range into which the discrete values map. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper value of the range into which the discrete values map."},{"rawIndexableTextContent":"Maps the value from the range back to the discrete value that it matches.  Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale. A value within the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the value from the range back to the discrete value that it matches."},{"rawIndexableTextContent":"The type of discrete scale. ","kind":"symbol","title":"DiscreteScaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType","interfaceLanguage":"swift"}},"summary":"The type of discrete scale."},{"rawIndexableTextContent":"The lower value of the range into which the discrete values map. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower value of the range into which the discrete values map."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The lower bound for the scale’s range. The upper bound for the scale’s range. A Boolean value that indicates if the mapping from domain to range is inverted.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"The number of ticks desired when creating the scale.  Discussion This number may not match the number of ticks returned by ticksFromValues(_:reversed:from:to:formatter:)","kind":"symbol","title":"desiredTicks","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/desiredTicks","interfaceLanguage":"swift"}},"summary":"The number of ticks desired when creating the scale."},{"rawIndexableTextContent":"The type used for the scale’s domain. ","kind":"symbol","title":"InputType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/InputType","interfaceLanguage":"swift"}},"summary":"The type used for the scale’s domain."},{"rawIndexableTextContent":"The upper value of the range into which the discrete values map. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper value of the range into which the discrete values map."},{"rawIndexableTextContent":"Maps the value from the range values you provide back to the discrete value that it matches.  Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale. A value within the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the value from the range values you provide back to the discrete value that it matches."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"A linear scale for transforming and mapping continuous input values within a domain to output values you provide. ","kind":"symbol","title":"LinearScale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale","interfaceLanguage":"swift"}},"summary":"A linear scale for transforming and mapping continuous input values within a domain to output values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range.","kind":"symbol","title":"range(reversed:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Maps the value from the range back to the discrete value that it matches.  Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale. A value within the range of the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the value from the range back to the discrete value that it matches."},{"rawIndexableTextContent":"The amount of padding between bands. ","kind":"symbol","title":"paddingInner","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingInner","interfaceLanguage":"swift"}},"summary":"The amount of padding between bands."},{"rawIndexableTextContent":"Returns a list of strings that make up the valid tick values out of the set that you provide.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.","kind":"symbol","title":"validTickValues(_:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/validTickValues(_:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns a list of strings that make up the valid tick values out of the set that you provide."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The range to apply as the scale’s domain","kind":"symbol","title":"domain(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:)-4f5d3","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"A collection of components to provide structures that support data visualization. Overview SwiftViz includes components useful to creating visualizations of data. Many such visualizations require mapping from an abstract set of input values to another output value. Continuous scales map from one continuous range to another, such as 0...10 to 5.0...36.0. The continuous scales include scales that support linear, logarithmic, and exponential visualization transforms. Discrete scales map from a discrete range, defined by a collection, to a continuous range, as a point or as a band, with spacing considered in the scale’s range. Loosely based on the APIs and the visualization constructs created by Mike Bostock and contributors to D3.js","kind":"symbol","title":"SwiftVizScale","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale","interfaceLanguage":"swift"}},"summary":"A collection of components to provide structures that support data visualization."},{"rawIndexableTextContent":"Creates a new logarithmic scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(from:to:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/init(from:to:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","interfaceLanguage":"swift"}},"summary":"Creates a new logarithmic scale for the upper and lower bounds of the domain you provide."},{"rawIndexableTextContent":"Creates a new tick  The value at the tick’s location. The location of the tick within the range for a scale.","kind":"symbol","title":"init(value:location:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)-62lbu","interfaceLanguage":"swift"}},"summary":"Creates a new tick"},{"rawIndexableTextContent":"Creates a new band scale.  An array of the types the scale maps into. The amount of padding between bands. The amount of padding outside of the bands. A Boolean value that indicates the scaled values are returned as rounded values. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"init(_:paddingInner:paddingOuter:round:reversed:from:to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/init(_:paddingInner:paddingOuter:round:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Creates a new band scale."},{"rawIndexableTextContent":"","kind":"article","title":"ContinuousScaleProtocol Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ContinuousScaleProtocol-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Creates a new power scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The exponent for the power transforming, defaulting to 1. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(from:to:exponent:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(from:to:exponent:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","interfaceLanguage":"swift"}},"summary":"Creates a new power scale for the upper and lower bounds of the domain you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(rangeLower:rangeHigher:formatter:)-6n437","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the inner padding set to the value you provide.  The amount of padding between bands.","kind":"symbol","title":"padding(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/padding(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the inner padding set to the value you provide."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/defaultTickValues(formatter:)-9sfak","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"A discrete scale that returns a band for the scaled value. ","kind":"symbol","title":"DiscreteScaleType.band","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/band","interfaceLanguage":"swift"}},"summary":"A discrete scale that returns a band for the scaled value."},{"rawIndexableTextContent":"A Boolean value that indicates the scaled values are returned as rounded values. ","kind":"symbol","title":"round","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/round","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates the scaled values are returned as rounded values."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range.","kind":"symbol","title":"range(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Returns a new scale with the transform set to the value you provide.  Return Value A copy of the scale with the transform setting you provide. The transform constraint to apply when values fall outside the domain of the scale.","kind":"symbol","title":"transform(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/transform(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the transform set to the value you provide."},{"rawIndexableTextContent":"Data processed against a scale isn’t influenced by the scale’s domain. ","kind":"symbol","title":"DomainDataTransform.none","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/none","interfaceLanguage":"swift"}},"summary":"Data processed against a scale isn’t influenced by the scale’s domain."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. Discussion Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"domainHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domainHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"Transforms the input value to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. Discussion The input value is first verified against the domain settings for the scale based on the transformType set for the scale. The value is then transformed using a function based on the scaleType, interpolated between domainLower and domainHigher, then mapped to the range taking into account the scale’s reversed setting.","kind":"symbol","title":"scale(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value to the resulting value into the range you provide."},{"rawIndexableTextContent":"A type that maps discrete values of an input domain to an output range. ","kind":"symbol","title":"DiscreteScale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale","interfaceLanguage":"swift"}},"summary":"A type that maps discrete values of an input domain to an output range."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"An exponential continuous scale. ","kind":"symbol","title":"ContinuousScaleType.power(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/power(_:)","interfaceLanguage":"swift"}},"summary":"An exponential continuous scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The lower bound for the scale’s domain. The upper bound for the scale’s domain.","kind":"symbol","title":"domain(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domain(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the transform set to the value you provide.  Return Value A copy of the scale with the transform setting you provide. The transform constraint to apply when values fall outside the domain of the scale.","kind":"symbol","title":"transform(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/transform(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the transform set to the value you provide."},{"rawIndexableTextContent":"A discrete scale that maps from a discrete value within a collection to a point within a continuous output range.  Overview Point scales are useful for mapping discrete data from a collection to a collection of specific points. If you are rendering a bar chart, consider using the BandScale instead.","kind":"symbol","title":"PointScale","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale","interfaceLanguage":"swift"}},"summary":"A discrete scale that maps from a discrete value within a collection to a point within a continuous output range."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The range to apply as the scale’s domain","kind":"symbol","title":"domain(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domain(_:)-6w4dt","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/defaultTickValues(formatter:)-20tnn","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the square of the resulting value in the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the square of the resulting value in the range you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A replica of the scale, with new range values. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"The type of continuous scale.  Overview Exponential scales (PowerScale) require an additional value for the exponent of the scale.","kind":"symbol","title":"ContinuousScaleType","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/invert(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"","kind":"article","title":"ContinuousScaleProtocol Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ContinuousScaleProtocol-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"The type used for the scale’s range. ","kind":"symbol","title":"RangeType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/RangeType","interfaceLanguage":"swift"}},"summary":"The type used for the scale’s range."},{"rawIndexableTextContent":"Creates a new power scale for the domain of 0 to the value you provide.  The upper, or lower, bound for the domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale. Discussion If the value you provide is less than 0, the domain of the scale ranges from the value you provide to 0. If the value you provide is greater than 0, the domain of the scale ranges from 0 to the value you provide.","kind":"symbol","title":"init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-72lyl","interfaceLanguage":"swift"}},"summary":"Creates a new power scale for the domain of 0 to the value you provide."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainContains(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"A discrete scale that maps from a discrete value within a collection to a band within a continuous output range.  Overview Band scales are useful for bar charts, calculating explicit bands with optional spacing to align with elements of a collection. If you mapping discrete data into a scatter plot, consider using the PointScale instead.","kind":"symbol","title":"BandScale","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale","interfaceLanguage":"swift"}},"summary":"A discrete scale that maps from a discrete value within a collection to a band within a continuous output range."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A replica of the scale, with new range values. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  Return Value A list of tick values validated against the domain, and range based on the setting of transformType an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.","kind":"symbol","title":"ticksFromValues(_:reversed:from:to:formatter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticksFromValues(_:reversed:from:to:formatter:)","interfaceLanguage":"swift"}},"summary":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  Return Value A list of tick values validated against the domain, and range based on the setting of transformType an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.","kind":"symbol","title":"ticksFromValues(_:reversed:from:to:formatter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticksFromValues(_:reversed:from:to:formatter:)","interfaceLanguage":"swift"}},"summary":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/ticks(rangeLower:rangeHigher:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the range set to the range you provide.  The range of the values into which the discrete values map.","kind":"symbol","title":"range(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the range you provide."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range.","kind":"symbol","title":"range(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Transforms the input value using a power function and maps the resulting value into the range you provide.  Return Value A value scaled by the power function, mapped to the range you provide. A value in the domain of the scale.","kind":"symbol","title":"scale(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a power function and maps the resulting value into the range you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-40l2z","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain inferred from the list of values you provide.  Return Value A copy of the scale with the domain values you provide. The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values.","kind":"symbol","title":"domain(_:nice:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domain(_:nice:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain inferred from the list of values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"range(lower:higher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Processes a value against the scale, potentially constraining or dropping the value.  Return Value An updated value, or nil if the value was dropped. The value to transform against the domain of the scale. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ","kind":"symbol","title":"transformAgainstDomain(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transformAgainstDomain(_:)","interfaceLanguage":"swift"}},"summary":"Processes a value against the scale, potentially constraining or dropping the value."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"A linear continuous scale that squares the result. ","kind":"symbol","title":"ContinuousScaleType.radial","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/radial","interfaceLanguage":"swift"}},"summary":"A linear continuous scale that squares the result."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"domainLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Creates a new power scale for the domain of 0 to the value you provide.  The upper, or lower, bound for the domain. The exponent for the power transforming, defaulting to 1. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale. Discussion If the value you provide is less than 0, the domain of the scale ranges from the value you provide to 0. If the value you provide is greater than 0, the domain of the scale ranges from 0 to the value you provide.","kind":"symbol","title":"init(_:exponent:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/init(_:exponent:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-60z2k","interfaceLanguage":"swift"}},"summary":"Creates a new power scale for the domain of 0 to the value you provide."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"domainLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/domainLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"The type of continuous scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainContains(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bounding value of the range to transform to. The higher bounding value of the range to transform to. Discussion Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":" ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/scaleType","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":" ","kind":"symbol","title":"value","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/value","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Returns a new scale with the domain inferred from the list of values you provide.  Return Value A copy of the scale with the domain values you provide. The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values.","kind":"symbol","title":"domain(_:nice:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domain(_:nice:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain inferred from the list of values you provide."},{"rawIndexableTextContent":"Returns a list of strings that make up the valid tick values out of the set that you provide.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.","kind":"symbol","title":"validTickValues(_:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/validTickValues(_:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns a list of strings that make up the valid tick values out of the set that you provide."},{"rawIndexableTextContent":"","kind":"article","title":"DiscreteScale Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/DiscreteScale-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"The lower value of the range into which the discrete values map. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower value of the range into which the discrete values map."},{"rawIndexableTextContent":"Returns a new scale with the domain set to span the values you provide.  An array of input values.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domain(_:)-36okr","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to span the values you provide."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Processes a value against the scale, potentially constraining or dropping the value.  Return Value An updated value, or nil if the value was dropped. The value to transform against the domain of the scale. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ","kind":"symbol","title":"transformAgainstDomain(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformAgainstDomain(_:)","interfaceLanguage":"swift"}},"summary":"Processes a value against the scale, potentially constraining or dropping the value."},{"rawIndexableTextContent":"","kind":"article","title":"ContinuousScaleProtocol Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ContinuousScaleProtocol-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Creates a new linear scale for the upper and lower bounds of the domain range you provide.  A range that represents the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-7uv45","interfaceLanguage":"swift"}},"summary":"Creates a new linear scale for the upper and lower bounds of the domain range you provide."},{"rawIndexableTextContent":"Maps the discrete item into a band with the range values you provide..  Return Value A band that wraps the category found in the domain with start and end values for the range of the band, or nil if the value isn’t contained by the domain. A discrete item from the list provided as the domain for the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the discrete item into a band with the range values you provide.."},{"rawIndexableTextContent":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  Return Value A list of tick values validated against the domain, and range based on the setting of transformType an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.","kind":"symbol","title":"ticksFromValues(_:reversed:from:to:formatter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/ticksFromValues(_:reversed:from:to:formatter:)","interfaceLanguage":"swift"}},"summary":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain."},{"rawIndexableTextContent":"Returns a new scale with the rounding set to the value you provide.  A Boolean value that indicates the scaled values are returned as rounded values.","kind":"symbol","title":"round(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/round(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the rounding set to the value you provide."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domainContains(_:)-2pfui","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/defaultTickValues(formatter:)-3vx0p","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Transforms the input value using a power function and maps the resulting value into the range you provide.  Return Value A value scaled by the power function, mapped to the range you provide. A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a power function and maps the resulting value into the range you provide."},{"rawIndexableTextContent":"Returns a new scale with the transform set to the value you provide.  Return Value A replica of the scale, updating the transformType. The transform constraint to apply when values fall outside the domain of the scale.","kind":"symbol","title":"transform(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/transform(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the transform set to the value you provide."},{"rawIndexableTextContent":"Data processed against a scale is clamped to the upper and lower values of the scale’s domain. ","kind":"symbol","title":"DomainDataTransform.clamp","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/clamp","interfaceLanguage":"swift"}},"summary":"Data processed against a scale is clamped to the upper and lower values of the scale’s domain."},{"rawIndexableTextContent":"","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Returns a new scale with the range set to the range you provide.  The range of the values into which the discrete values map.","kind":"symbol","title":"range(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the range you provide."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns a new scale with the inner padding set to the value you provide.  The amount of padding between bands.","kind":"symbol","title":"paddingInner(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingInner(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the inner padding set to the value you provide."},{"rawIndexableTextContent":"A type that can be converted into a nice number. ","kind":"symbol","title":"NumberType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/NumberType","interfaceLanguage":"swift"}},"summary":"A type that can be converted into a nice number."},{"rawIndexableTextContent":"The type of continuous scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"The type of discrete scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of discrete scale."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value mapped from the range back into the domain using an inverse power transform. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The lower bound for the scale’s domain. The upper bound for the scale’s domain.","kind":"symbol","title":"domain(lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domain(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"The number of ticks desired when creating the scale.  Discussion This number may not match the number of ticks returned by ticksFromValues(_:reversed:from:to:formatter:)","kind":"symbol","title":"desiredTicks","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/desiredTicks","interfaceLanguage":"swift"}},"summary":"The number of ticks desired when creating the scale."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Maps the value from the range back to the discrete value that it matches.  Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale. A value within the range of the scale.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Maps the value from the range back to the discrete value that it matches."},{"rawIndexableTextContent":"Returns a list of strings that make up the valid tick values out of the set that you provide.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.","kind":"symbol","title":"validTickValues(_:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/validTickValues(_:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns a list of strings that make up the valid tick values out of the set that you provide."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the square of the resulting value in the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale.","kind":"symbol","title":"scale(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the square of the resulting value in the range you provide."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"domainLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domainLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Converts a value of the type into an instance of Double  Return Value A double value matching the value you provided.","kind":"symbol","title":"toDouble()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble\/toDouble()","interfaceLanguage":"swift"}},"summary":"Converts a value of the type into an instance of Double"},{"rawIndexableTextContent":"The type of continuous scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticks(rangeLower:rangeHigher:formatter:)-1skhl","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the range set to the range you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range of the values into which the discrete values map.","kind":"symbol","title":"range(reversed:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the range you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range.","kind":"symbol","title":"range(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range.","kind":"symbol","title":"range(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Maps the discrete item into a range location.  Return Value A location along the range that indicates a point that matches with the value you provided, or nil if the value isn’t contained by the domain. A discrete item from the list provided as the domain for the scale.","kind":"symbol","title":"scale(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Maps the discrete item into a range location."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/ticks(rangeLower:rangeHigher:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainContains(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/defaultTickValues(formatter:)-6ggcw","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"domainHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domainHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"Returns a new scale with the transform set to the value you provide.  Return Value A copy of the scale with the transform setting you provide. The transform constraint to apply when values fall outside the domain of the scale.","kind":"symbol","title":"transform(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/transform(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the transform set to the value you provide."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"The string value for the tick. ","kind":"symbol","title":"label","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/label","interfaceLanguage":"swift"}},"summary":"The string value for the tick."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  An array of the types the scale maps into.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/domain(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-9b7vk","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/scale(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Returns a tuple that provide nice conversions of the minimum, step value, maximum for a range with a desired number of steps.  Return Value An array of nice numbers linearly spaced through the range, with the min and max equaling or exceeding the values you provide. The minimum value of a range of numbers. The maximum value of a range of numbers. The number of tick marks desired in the resulting range.","kind":"symbol","title":"niceMinStepMax(min:max:ofSize:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceMinStepMax(min:max:ofSize:)","interfaceLanguage":"swift"}},"summary":"Returns a tuple that provide nice conversions of the minimum, step value, maximum for a range with a desired number of steps."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"range(lower:higher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a nice minimum value for a given range.  The minimum value of the range. The maximum value of the range. Discussion The algorithm returns 0 if the top of the range is sufficiently larger than the bottom, and the range doesn’t extend into negative values. For minimum values below 0, the number returned is converted into an appropriate “nice” number. The value returned will be lower than or equal to the minimum value of the range.","kind":"symbol","title":"niceMinimumValueForRange(min:max:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/niceMinimumValueForRange(min:max:)","interfaceLanguage":"swift"}},"summary":"Returns a nice minimum value for a given range."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range.","kind":"symbol","title":"range(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  Return Value A list of tick values validated against the domain, and range based on the setting of transformType an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.","kind":"symbol","title":"ticksFromValues(_:reversed:from:to:formatter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticksFromValues(_:reversed:from:to:formatter:)","interfaceLanguage":"swift"}},"summary":"Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain."},{"rawIndexableTextContent":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.","kind":"symbol","title":"transformType","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transformType","interfaceLanguage":"swift"}},"summary":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range."},{"rawIndexableTextContent":"Transforms the square root of the value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Transforms the square root of the value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns a new scale with the transform set to the value you provide.  Return Value A copy of the scale with the transform setting you provide. The transform constraint to apply when values fall outside the domain of the scale.","kind":"symbol","title":"transform(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/transform(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the transform set to the value you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/ticks(reversed:rangeLower:rangeHigher:formatter:)-1ftxm","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"A power scale created with a continuous input domain that provides methods to convert values within that domain to an output range. ","kind":"symbol","title":"PowerScale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale","interfaceLanguage":"swift"}},"summary":"A power scale created with a continuous input domain that provides methods to convert values within that domain to an output range."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the square of the resulting value in the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the square of the resulting value in the range you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-2r214","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range.","kind":"symbol","title":"range(reversed:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/scale(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Converts back from the output range to a value within the input domain.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. The lower bounding value of the range to transform from. The higher bounding value of the range to transform from. Discussion The inverse of scale(_:from:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Converts back from the output range to a value within the input domain."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Returns a new scale with the domain inferred from the list of values you provide.  Return Value A copy of the scale with the domain values you provide. The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values.","kind":"symbol","title":"domain(_:nice:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domain(_:nice:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain inferred from the list of values you provide."},{"rawIndexableTextContent":"A logarithmic scale created with a continuous input domain that provides methods to convert values within that domain to an output range. ","kind":"symbol","title":"LogScale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale","interfaceLanguage":"swift"}},"summary":"A logarithmic scale created with a continuous input domain that provides methods to convert values within that domain to an output range."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"Creates a new power scale for the domain of 0 to the value you provide.  The upper, or lower, bound for the domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale. Discussion If the value you provide is less than 0, the domain of the scale ranges from the value you provide to 0. If the value you provide is greater than 0, the domain of the scale ranges from 0 to the value you provide.","kind":"symbol","title":"init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-2rwdv","interfaceLanguage":"swift"}},"summary":"Creates a new power scale for the domain of 0 to the value you provide."},{"rawIndexableTextContent":" ","kind":"symbol","title":"middle","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/middle","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/defaultTickValues(formatter:)-80gsy","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Making Scales Summary Overview Here’s something interesting.","kind":"article","title":"Making and Using Scales","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/MakingAndUsingScales","interfaceLanguage":"swift"}},"summary":"Making Scales Summary"},{"rawIndexableTextContent":"Processes a value against the scale, potentially constraining or dropping the value.  Return Value An updated value, or nil if the value was dropped. The value to transform against the domain of the scale. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ","kind":"symbol","title":"transformAgainstDomain(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/transformAgainstDomain(_:)","interfaceLanguage":"swift"}},"summary":"Processes a value against the scale, potentially constraining or dropping the value."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domainContains(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"Creates a new power scale for the domain of 0 to the value you provide.  The upper, or lower, bound for the domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale. Discussion If the value you provide is less than 0, the domain of the scale ranges from the value you provide to 0. If the value you provide is greater than 0, the domain of the scale ranges from 0 to the value you provide.","kind":"symbol","title":"init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/init(_:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-1rhvz","interfaceLanguage":"swift"}},"summary":"Creates a new power scale for the domain of 0 to the value you provide."},{"rawIndexableTextContent":"Creates a new linear scale for the upper and lower bounds of the domain range you provide.  A range that represents the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-9hcw4","interfaceLanguage":"swift"}},"summary":"Creates a new linear scale for the upper and lower bounds of the domain range you provide."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"rangeLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/rangeLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/defaultTickValues(formatter:)-92cze","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"A value that represents how a scale handles data transformation that exceed the domain or range of the scale. ","kind":"symbol","title":"DomainDataTransform","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform","interfaceLanguage":"swift"}},"summary":"A value that represents how a scale handles data transformation that exceed the domain or range of the scale."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:formatter:)-kfhr","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/defaultTickValues(formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"domainHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The range to apply as the scale’s domain","kind":"symbol","title":"domain(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domain(_:)-1itfq","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-58uhv","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"domainLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/domainLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Returns a list of strings that make up the valid tick values out of the set that you provide.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.","kind":"symbol","title":"validTickValues(_:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/validTickValues(_:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns a list of strings that make up the valid tick values out of the set that you provide."},{"rawIndexableTextContent":"The type used for the scale’s output. ","kind":"symbol","title":"OutputType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/OutputType","interfaceLanguage":"swift"}},"summary":"The type used for the scale’s output."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale.","kind":"symbol","title":"scale(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/ticks(rangeLower:rangeHigher:formatter:)-2dbxl","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to span the values you provide.  An array of input values.","kind":"symbol","title":"domain(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domain(_:)-84a8n","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to span the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  Return Value A copy of the scale with the range values you provide. The range to apply as the scale’s range.","kind":"symbol","title":"range(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/range(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":" ","kind":"symbol","title":"lower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/lower","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/defaultTickValues(formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Transforms a value within the range into an associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into an associated domain value."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"The location where the tick should be placed within a chart’s range. ","kind":"symbol","title":"rangeLocation","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/rangeLocation","interfaceLanguage":"swift"}},"summary":"The location where the tick should be placed within a chart’s range."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"range(reversed:lower:higher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/range(reversed:lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a list of strings that make up the valid tick values out of the set that you provide.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.","kind":"symbol","title":"validTickValues(_:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/validTickValues(_:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns a list of strings that make up the valid tick values out of the set that you provide."},{"rawIndexableTextContent":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.","kind":"symbol","title":"transformType","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/transformType","interfaceLanguage":"swift"}},"summary":"A transformation value that indicates whether the output vales are constrained to the min and max of the output range."},{"rawIndexableTextContent":"Creates a new linear scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(from:to:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/init(from:to:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","interfaceLanguage":"swift"}},"summary":"Creates a new linear scale for the upper and lower bounds of the domain you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-341bl","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"An array of the types the scale maps into. ","kind":"symbol","title":"domain","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/domain","interfaceLanguage":"swift"}},"summary":"An array of the types the scale maps into."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"A Boolean value that indicates if the mapping from domain to range is inverted. ","kind":"symbol","title":"reversed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/reversed","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates if the mapping from domain to range is inverted."},{"rawIndexableTextContent":"The upper bound of the input domain. ","kind":"symbol","title":"rangeHigher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/rangeHigher","interfaceLanguage":"swift"}},"summary":"The upper bound of the input domain."},{"rawIndexableTextContent":"The distance or length between the upper and lower bounds of the input domain. ","kind":"symbol","title":"domainExtent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domainExtent","interfaceLanguage":"swift"}},"summary":"The distance or length between the upper and lower bounds of the input domain."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/invert(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"The distance or length between the upper and lower bounds of the input domain. ","kind":"symbol","title":"domainExtent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/domainExtent","interfaceLanguage":"swift"}},"summary":"The distance or length between the upper and lower bounds of the input domain."},{"rawIndexableTextContent":"Transforms the input value using a power function and maps the resulting value into the range you provide.  Return Value A value scaled by the power function, mapped to the range you provide. A value in the domain of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/scale(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a power function and maps the resulting value into the range you provide."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a new scale with the domain set to the values you provide.  Return Value A copy of the scale with the domain values you provide. The range to apply as the scale’s domain","kind":"symbol","title":"domain(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domain(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the domain set to the values you provide."},{"rawIndexableTextContent":"A  visual representation of a point along an axis.  Overview When created based on a range, a tick includes a location along a single direction and a textual representation. It is meant to be created using a Scale, with some input domain being mapped to visualization using the Scale’s output range.","kind":"symbol","title":"Tick","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick","interfaceLanguage":"swift"}},"summary":"A  visual representation of a point along an axis."},{"rawIndexableTextContent":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"scale(_:to:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/scale(_:to:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide."},{"rawIndexableTextContent":"","kind":"article","title":"DiscreteScale Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/DiscreteScale-Implementations","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"The description of the scale. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/description","interfaceLanguage":"swift"}},"summary":"The description of the scale."},{"rawIndexableTextContent":"The type of continuous scale. ","kind":"symbol","title":"scaleType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scaleType","interfaceLanguage":"swift"}},"summary":"The type of continuous scale."},{"rawIndexableTextContent":"Generates a range of numbers with a minimum, maximum, and step interval that’s visually pleasing.  Return Value An array of nice numbers linearly spaced through the range, with the min and max equaling or exceeding the values you provide. The minimum value of a range of numbers. The maximum value of a range of numbers. The number of tick marks desired in the resulting range.","kind":"symbol","title":"rangeOfNiceValues(min:max:ofSize:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/NiceValue\/rangeOfNiceValues(min:max:ofSize:)","interfaceLanguage":"swift"}},"summary":"Generates a range of numbers with a minimum, maximum, and step interval that’s visually pleasing."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/ticks(rangeLower:rangeHigher:formatter:)-5xor8","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LogScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-8c4j0","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.  Return Value true if the value is between the lower and upper domain values. The value to compare.","kind":"symbol","title":"domainContains(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/domainContains(_:)-5zby1","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the value you provided is within the scale’s domain."},{"rawIndexableTextContent":"Converts back from the output range to a value within the input domain.  Return Value A value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. Discussion The inverse of scale(_:from:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/invert(_:)","interfaceLanguage":"swift"}},"summary":"Converts back from the output range to a value within the input domain."},{"rawIndexableTextContent":"The lower bound of the input domain. ","kind":"symbol","title":"domainLower","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domainLower","interfaceLanguage":"swift"}},"summary":"The lower bound of the input domain."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-6m55x","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Transforms the input value using a linear function to the resulting value into the range you provide.  Return Value A value mapped to the range you provide. A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to.","kind":"symbol","title":"scale(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LinearScale\/scale(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms the input value using a linear function to the resulting value into the range you provide."},{"rawIndexableTextContent":"A linear continuous scale. ","kind":"symbol","title":"ContinuousScaleType.linear","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/linear","interfaceLanguage":"swift"}},"summary":"A linear continuous scale."},{"rawIndexableTextContent":"Maps the value from the range back to the discrete value that it matches.  Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale. A value within the range of the scale.","kind":"symbol","title":"invert(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:)-63wv8","interfaceLanguage":"swift"}},"summary":"Maps the value from the range back to the discrete value that it matches."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value mapped from the range back into the domain using an inverse power transform. A value in the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.","kind":"symbol","title":"defaultTickValues(formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/defaultTickValues(formatter:)","interfaceLanguage":"swift"}},"summary":"Returns an array of the strings that make up the ticks for the scale."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns a new scale with the outer padding set to the value you provide.  The amount of padding outside of the bands.","kind":"symbol","title":"paddingOuter(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingOuter(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the outer padding set to the value you provide."},{"rawIndexableTextContent":"A type that maps values from an input domain to an output range. ","kind":"symbol","title":"Scale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale","interfaceLanguage":"swift"}},"summary":"A type that maps values from an input domain to an output range."},{"rawIndexableTextContent":"Creates a new linear scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale.","kind":"symbol","title":"init(from:to:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(from:to:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)","interfaceLanguage":"swift"}},"summary":"Creates a new linear scale for the upper and lower bounds of the domain you provide."},{"rawIndexableTextContent":"Returns a new scale with the range set to the values you provide.  The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"range(lower:higher:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(lower:higher:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the values you provide."},{"rawIndexableTextContent":"Returns a new scale with the rounding set to the value you provide.  A Boolean value that indicates the scaled values are returned as rounded values.","kind":"symbol","title":"round(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/round(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the rounding set to the value you provide."},{"rawIndexableTextContent":"Processes a value against the scale, potentially constraining or dropping the value.  Return Value An updated value, or nil if the value was dropped. The value to transform against the domain of the scale. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ","kind":"symbol","title":"transformAgainstDomain(_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/transformAgainstDomain(_:)","interfaceLanguage":"swift"}},"summary":"Processes a value against the scale, potentially constraining or dropping the value."},{"rawIndexableTextContent":"Maps the value from the range values you provide back to the discrete value that it matches.  Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale. A value within the range of the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.","kind":"symbol","title":"invert(_:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:from:to:)","interfaceLanguage":"swift"}},"summary":"Maps the value from the range values you provide back to the discrete value that it matches."},{"rawIndexableTextContent":"Transforms a value within the range into the associated domain value.  Return Value A value linearly mapped from the range back into the domain. A value in the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map from. The upper bound to the range to map from.","kind":"symbol","title":"invert(_:reversed:from:to:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:reversed:from:to:)","interfaceLanguage":"swift"}},"summary":"Transforms a value within the range into the associated domain value."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-2nx3q","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."},{"rawIndexableTextContent":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.","kind":"symbol","title":"invert(_:to:reversed:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/invert(_:to:reversed:)","interfaceLanguage":"swift"}},"summary":"Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform."},{"rawIndexableTextContent":"Returns a new scale with the range set to the range you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range of the values into which the discrete values map.","kind":"symbol","title":"range(reversed:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(reversed:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new scale with the range set to the range you provide."},{"rawIndexableTextContent":"Converts the value from the current type into a Double.  Return Value A value of the current type converted from Double, rounded down if necessary. A value of the current type","kind":"symbol","title":"fromDouble(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ConvertibleWithDouble\/fromDouble(_:)","interfaceLanguage":"swift"}},"summary":"Converts the value from the current type into a Double."},{"rawIndexableTextContent":"Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.","kind":"symbol","title":"ticks(reversed:rangeLower:rangeHigher:formatter:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleProtocol\/ticks(reversed:rangeLower:rangeHigher:formatter:)-5ot51","interfaceLanguage":"swift"}},"summary":"Returns an array of the locations within the output range to locate ticks for the scale."}]