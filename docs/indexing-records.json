[
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/label"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The string value for the tick. ",
    "summary" : "The string value for the tick.",
    "title" : "label"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/invert(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms a value within the range into an associated domain value.  A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from. Return Value A value linearly mapped from the range back into the domain.",
    "summary" : "Transforms a value within the range into an associated domain value.",
    "title" : "invert(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/domain(_:nice:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to span the values you provide.  A Boolean value that indicates whether to expand the domain to visually nice values. An array of dates.",
    "summary" : "Returns a new scale with the domain set to span the values you provide.",
    "title" : "domain(_:nice:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/range(reversed:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The range of data that a single bin of a histogram represents.  Overview The bins are expected to be used either independently as an ordered collection, or as the keys for an ordered dictionary. Within the collection, all bins except the last for a particular chart represent an open range. As an open range, the bin doesn’t include the threshold of the upper bound within it. The last bin of the collection is a closed range to include the final upper bound.",
    "summary" : "The range of data that a single bin of a histogram represents.",
    "title" : "HistogramBinRange"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scale(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the discrete item into a band.  A discrete item from the list provided as the domain for the scale. Return Value A band that wraps the category found in the domain with start and end values for the range of the band, or nil if the value isn’t contained by the domain.",
    "summary" : "Maps the discrete item into a band.",
    "title" : "scale(_:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:to:reversed:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  The value to be scaled. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.",
    "summary" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.",
    "title" : "scale(_:to:reversed:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(reversed:lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/_=(_:_:)-468vq"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.>=(_:_:). ",
    "summary" : "Inherited from Comparable.>=(_:_:).",
    "title" : ">=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/lexicographicallyPrecedes(_:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.lexicographicallyPrecedes(_:by:). ",
    "summary" : "Inherited from Sequence.lexicographicallyPrecedes(_:by:).",
    "title" : "lexicographicallyPrecedes(_:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/init(data:)-6k9pg"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Automatically determine the bins from data.  The data to populate the histogram.",
    "summary" : "Automatically determine the bins from data.",
    "title" : "init(data:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scale(_:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the discrete item into a band with the range values you provide..  A discrete item from the list provided as the domain for the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value A band that wraps the category found in the domain with start and end values for the range of the band, or nil if the value isn’t contained by the domain.",
    "summary" : "Maps the discrete item into a band with the range values you provide..",
    "title" : "scale(_:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/Iterator"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.Iterator. ",
    "summary" : "Inherited from Sequence.Iterator.",
    "title" : "Histogram.Iterator"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scale(_:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the discrete item into a range location.  A discrete item from the list provided as the domain for the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value A location along the range that indicates a point that matches with the value you provided, or nil if the value isn’t contained by the domain.",
    "summary" : "Maps the discrete item into a range location.",
    "title" : "scale(_:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/domain"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An array of the types the scale maps into. ",
    "summary" : "An array of the types the scale maps into.",
    "title" : "domain"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/.._(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable...<(_:_:). ",
    "summary" : "Inherited from Comparable...<(_:_:).",
    "title" : "..<(_:_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/transformType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.",
    "summary" : "A transformation value that indicates whether the output vales are constrained to the min and max of the output range.",
    "title" : "transformType"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:)-63wv8"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the value from the range back to the discrete value that it matches.  A value within the range of the scale. Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale.",
    "summary" : "Maps the value from the range back to the discrete value that it matches.",
    "title" : "invert(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:nice:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain inferred from the list of values you provide.  The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain inferred from the list of values you provide.",
    "title" : "domain(_:nice:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingInner(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the inner padding set to the value you provide.  The amount of padding between bands.",
    "summary" : "Returns a new scale with the inner padding set to the value you provide.",
    "title" : "paddingInner(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/round(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the rounding set to the value you provide.  A Boolean value that indicates the scaled values are returned as rounded values.",
    "summary" : "Returns a new scale with the rounding set to the value you provide.",
    "title" : "round(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/invert(_:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the value from the range back to the discrete value that it matches.  A value within the range of the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale.",
    "summary" : "Maps the value from the range back to the discrete value that it matches.",
    "title" : "invert(_:from:to:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms the input value to the resulting value into the range you provide.  A value in the domain of the scale. Return Value A value mapped to the range you provide. Discussion The input value is first verified against the domain settings for the scale based on the transformType set for the scale. The value is then transformed using a function based on the scaleType, interpolated between domainLower and domainHigher, then mapped to the range taking into account the scale’s reversed setting.",
    "summary" : "Transforms the input value to the resulting value into the range you provide.",
    "title" : "scale(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/sorted(using:)-5g2oz"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Sequence.sorted(using:). ",
    "summary" : "Inherited from Sequence.sorted(using:).",
    "title" : "sorted(using:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/sorted(using:)-9hgqm"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Sequence.sorted(using:). ",
    "summary" : "Inherited from Sequence.sorted(using:).",
    "title" : "sorted(using:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A histogram representing a distribution of numeric data. ",
    "summary" : "A histogram representing a distribution of numeric data.",
    "title" : "Histogram"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/reversed()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.reversed(). ",
    "summary" : "Inherited from Sequence.reversed().",
    "title" : "reversed()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/isEmpty"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates of the histogram is empty. ",
    "summary" : "A Boolean value that indicates of the histogram is empty.",
    "title" : "isEmpty"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale\/range(reversed:lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ComputedRGBInterpolator"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "A color interpolator that maps colors based on the output of red, green, and blue closures to compute a final color. ",
    "summary" : "A color interpolator that maps colors based on the output of red, green, and blue closures to compute a final color.",
    "title" : "ComputedRGBInterpolator"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/scaleType(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the type of scale set to the type you provide.  The type of continuous scale.",
    "summary" : "Returns a new scale with the type of scale set to the type you provide.",
    "title" : "scaleType(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale\/range(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A value that represents how a scale handles data transformation that exceed the domain or range of the scale. ",
    "summary" : "A value that represents how a scale handles data transformation that exceed the domain or range of the scale.",
    "title" : "DomainDataTransform"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/months"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Months, up to a year. ",
    "summary" : "Months, up to a year.",
    "title" : "DateMagnitude.months"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/transform(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the transform set to the value you provide.  The transform constraint to apply when values fall outside the domain of the scale. Return Value A copy of the scale with the transform setting you provide.",
    "summary" : "Returns a new scale with the transform set to the value you provide.",
    "title" : "transform(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scale(_:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the discrete item into a range location.  A discrete item from the list provided as the domain for the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value A location along the range that indicates a point that matches with the value you provided, or nil if the value isn’t contained by the domain.",
    "summary" : "Maps the discrete item into a range location.",
    "title" : "scale(_:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/flatMap(_:)-84z54"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.flatMap(_:). ",
    "summary" : "Inherited from Sequence.flatMap(_:).",
    "title" : "flatMap(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scale(_:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the discrete item into a band with the range values you provide..  A discrete item from the list provided as the domain for the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value A band that wraps the category found in the domain with start and end values for the range of the band, or nil if the value isn’t contained by the domain.",
    "summary" : "Maps the discrete item into a band with the range values you provide..",
    "title" : "scale(_:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/invert(_:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the value from the range back to the discrete value that it matches.  A value within the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale.",
    "summary" : "Maps the value from the range back to the discrete value that it matches.",
    "title" : "invert(_:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/reduce(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.reduce(_:_:). ",
    "summary" : "Inherited from Sequence.reduce(_:_:).",
    "title" : "reduce(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/subsecond"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Less than a second. ",
    "summary" : "Less than a second.",
    "title" : "DateMagnitude.subsecond"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/init(data:minimumStride:bounds:desiredCount:)-2c242"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Automatically determine the bins from data, constrained by a minimum bin size  The data to populate the histogram. The minimum bin size to group the counts. The minimum and maximum value that the histogram supports. An optional value of the number of bins to create. If nil, the number of bins is determined by the minimum stride you provide.",
    "summary" : "Automatically determine the bins from data, constrained by a minimum bin size",
    "title" : "init(data:minimumStride:bounds:desiredCount:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents the magnitude of the range between two dates. ",
    "summary" : "A type that represents the magnitude of the range between two dates.",
    "title" : "DateMagnitude"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-7n1l8"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the domain of 0 to the value you provide.  The upper, or lower, bound for the domain. The type of continuous scale. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range. Discussion If the value you provide is less than 0, the domain of the scale ranges from the value you provide to 0. If the value you provide is greater than 0, the domain of the scale ranges from 0 to the value you provide.",
    "summary" : "Creates a new scale for the domain of 0 to the value you provide.",
    "title" : "init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/padding(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the inner padding set to the value you provide.  The amount of padding between bands.",
    "summary" : "Returns a new scale with the inner padding set to the value you provide.",
    "title" : "padding(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/publisher"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Sequence.publisher. ",
    "summary" : "Inherited from Sequence.publisher.",
    "title" : "publisher"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/scaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of discrete scale. ",
    "summary" : "The type of discrete scale.",
    "title" : "scaleType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/linear"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A linear continuous scale. ",
    "summary" : "A linear continuous scale.",
    "title" : "ContinuousScaleType.linear"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/IndexedColorInterpolator\/interpolate(_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns the color mapped from the unit value you provide.  A unit value between 0 and  1.",
    "summary" : "Returns the color mapped from the unit value you provide.",
    "title" : "interpolate(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/PuRd"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a purple to red sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a purple to red sequential color scheme.",
    "title" : "PuRd"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of continuous scale. ",
    "summary" : "The type of continuous scale.",
    "title" : "ContinuousScaleType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/validTickValues(_:formatter:)-9dbw"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a list of strings that make up the tick values that are contained within the domain of the scale.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.",
    "summary" : "Returns a list of strings that make up the tick values that are contained within the domain of the scale.",
    "title" : "validTickValues(_:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/init(_:padding:round:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new point scale.  An array of the types the scale maps into. The amount of padding between the points. A Boolean value that indicates the scaled values are returned as rounded values. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Creates a new point scale.",
    "title" : "init(_:padding:round:reversed:from:to:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticksFromValues(_:reversed:from:to:formatter:)-7mb58"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Return Value A list of tick values validated against the domain, and range based on the setting of transformType Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.",
    "summary" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
    "title" : "ticksFromValues(_:reversed:from:to:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/Comparable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Comparable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale\/RangeType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type used for the scale’s range. ",
    "summary" : "The type used for the scale’s range.",
    "title" : "RangeType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCHColorInterpolator\/init(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Creates a new color interpolator that maps between the two colors you provide.  The color at the beginning. The color at the end.",
    "summary" : "Creates a new color interpolator that maps between the two colors you provide.",
    "title" : "init(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that maps discrete values of an input domain to an output range. ",
    "summary" : "A type that maps discrete values of an input domain to an output range.",
    "title" : "DiscreteScale"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Diverging, multi-hue color schemes.  Overview Color Example BrBG  PrGN  PiYG  PuOr  RdBu  RdGy  RdYlBu  RdYlGn  Spectral  ",
    "summary" : "Diverging, multi-hue color schemes.",
    "title" : "ColorScheme.Diverging"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/~=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from RangeExpression.~=(_:_:). ",
    "summary" : "Inherited from RangeExpression.~=(_:_:).",
    "title" : "~=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that contains color schemes for use within a sequential scale. ",
    "summary" : "A type that contains color schemes for use within a sequential scale.",
    "title" : "ColorScheme"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of continuous scale. ",
    "summary" : "The type of continuous scale.",
    "title" : "scaleType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the range you provide.  The range of the values into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the range you provide.",
    "title" : "range(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/sorted(by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.sorted(by:). ",
    "summary" : "Inherited from Sequence.sorted(by:).",
    "title" : "sorted(by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/round"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates the scaled values are returned as rounded values. ",
    "summary" : "A Boolean value that indicates the scaled values are returned as rounded values.",
    "title" : "round"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/domain(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the span of values you provide.  An array of input values.",
    "summary" : "Returns a new scale with the domain set to the span of values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/domain(_:)-5m2g6"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The range to apply as the scale’s domain Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that maps values from an input domain to an output range, or reversed from an output range to a corresponding domain value. ",
    "summary" : "A type that maps values from an input domain to an output range, or reversed from an output range to a corresponding domain value.",
    "title" : "ReversibleScale"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/YlOrBr"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a yellow through orange to brown sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a yellow through orange to brown sequential color scheme.",
    "title" : "YlOrBr"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/round(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the rounding set to the value you provide.  A Boolean value that indicates the scaled values are returned as rounded values.",
    "summary" : "Returns a new scale with the rounding set to the value you provide.",
    "title" : "round(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/defaultTickValues(formatter:calendar:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings. The calendar to use in determining time slices.",
    "summary" : "Returns an array of the strings that make up the ticks for the scale.",
    "title" : "defaultTickValues(formatter:calendar:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/rangeLocation"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The location where the tick should be placed within a chart’s range. ",
    "summary" : "The location where the tick should be placed within a chart’s range.",
    "title" : "rangeLocation"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue\/Reds"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a white to red single-hue color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a white to red single-hue color scheme.",
    "title" : "Reds"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/prefix(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.prefix(_:). ",
    "summary" : "Inherited from Sequence.prefix(_:).",
    "title" : "prefix(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/upperBound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The highest value of the histogram’s range. ",
    "summary" : "The highest value of the histogram’s range.",
    "title" : "upperBound"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The description of the scale. ",
    "summary" : "The description of the scale.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/domainHigher"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "The upper bound of the input domain. ",
    "summary" : "The upper bound of the input domain.",
    "title" : "domainHigher"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/scale(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.  The value to be scaled. Return Value A value within the bounds of the range values you provide, or nil if the value was dropped.",
    "summary" : "Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.",
    "title" : "scale(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/PuBuGn"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a purple through blue to green sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a purple through blue to green sequential color scheme.",
    "title" : "PuBuGn"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/rangeLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower bound of the output range. ",
    "summary" : "The lower bound of the output range.",
    "title" : "rangeLower"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick\/init(value:location:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new tick.  The value at the tick’s location. The location of the tick within the range for a scale. Discussion If the location value you provide is NaN, the initializer returns nil.",
    "summary" : "Creates a new tick.",
    "title" : "init(value:location:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/init(data:minimumStride:bounds:desiredCount:)-1kxi5"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Automatically determine the bins from data, constrained by a minimum bin size  The data to populate the histogram. The minimum bin size to group the counts. The minimum and maximum value that the histogram supports. An optional value of the number of bins to create. If nil, the number of bins is determined by the minimum stride you provide.",
    "summary" : "Automatically determine the bins from data, constrained by a minimum bin size",
    "title" : "init(data:minimumStride:bounds:desiredCount:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/reduce(into:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.reduce(into:_:). ",
    "summary" : "Inherited from Sequence.reduce(into:_:).",
    "title" : "reduce(into:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCHColorInterpolator\/interpolate(_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns the color mapped from the unit value you provide.  A unit value between 0 and  1.",
    "summary" : "Returns the color mapped from the unit value you provide.",
    "title" : "interpolate(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:)-63bua"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The range to apply as the scale’s domain Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:to:reversed:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  The value to be scaled back from the range values to the domain. A Boolean value that indicates if the mapping from domain to range is inverted. The higher bounding value of the range to transform from. Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.",
    "summary" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
    "title" : "invert(_:to:reversed:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/radial"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A linear continuous scale that squares the result. ",
    "summary" : "A linear continuous scale that squares the result.",
    "title" : "ContinuousScaleType.radial"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/...(_:)-3wsp6"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable....(_:). ",
    "summary" : "Inherited from Comparable....(_:).",
    "title" : "...(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/prefix(while:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.prefix(while:). ",
    "summary" : "Inherited from Sequence.prefix(while:).",
    "title" : "prefix(while:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(reversed:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the range you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range of the values into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the range you provide.",
    "title" : "range(reversed:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCHColorInterpolator"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "A color interpolator that maps colors between two colors through the LCH color space. ",
    "summary" : "A color interpolator that maps colors between two colors through the LCH color space.",
    "title" : "LCHColorInterpolator"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/years"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Years. ",
    "summary" : "Years.",
    "title" : "DateMagnitude.years"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/lowerBound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lowest value of the histogram’s range. ",
    "summary" : "The lowest value of the histogram’s range.",
    "title" : "lowerBound"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/transformType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A transformation value that indicates whether the output vales are constrained to the min and max of the output range.  Discussion If true, values processed by the scale are constrained to the output range, and values processed backwards through the scale are constrained to the input domain.",
    "summary" : "A transformation value that indicates whether the output vales are constrained to the min and max of the output range.",
    "title" : "transformType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/none"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Data processed against a scale isn’t influenced by the scale’s domain. ",
    "summary" : "Data processed against a scale isn’t influenced by the scale’s domain.",
    "title" : "DomainDataTransform.none"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(reversed:lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/formatted(_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Sequence.formatted(_:). ",
    "summary" : "Inherited from Sequence.formatted(_:).",
    "title" : "formatted(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/RdGy"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a red to grey diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a red to grey diverging color scheme.",
    "title" : "RdGy"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/defaultTickValues(formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the strings that make up the ticks for the scale.",
    "title" : "defaultTickValues(formatter:)"
  },
  {
    "headings" : [
      "Example"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Snippets"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " Example ",
    "summary" : "",
    "title" : "Snippets"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale\/invert(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts back from the output range to a value within the input domain.  The value to be scaled back from the range values to the domain. Return Value A value within the bounds of the range values you provide, or nil if the value was dropped.",
    "summary" : "Converts back from the output range to a value within the input domain.",
    "title" : "invert(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/PrGN"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a purple to green diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a purple to green diverging color scheme.",
    "title" : "PrGN"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/first(where:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.first(where:). ",
    "summary" : "Inherited from Sequence.first(where:).",
    "title" : "first(where:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/invert(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the value from the range back to the discrete value that it matches.  A value within the range of the scale. Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale.",
    "summary" : "Maps the value from the range back to the discrete value that it matches.",
    "title" : "invert(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/middle"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "middle"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue\/Blues"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a white to blue single-hue color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a white to blue single-hue color scheme.",
    "title" : "Blues"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/elementsEqual(_:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.elementsEqual(_:by:). ",
    "summary" : "Inherited from Sequence.elementsEqual(_:by:).",
    "title" : "elementsEqual(_:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/rangeHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper bound of the output range. ",
    "summary" : "The upper bound of the output range.",
    "title" : "rangeHigher"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-7c7g6"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the domain of 0 to the value you provide.  The upper, or lower, bound for the domain. The type of continuous scale. The transform constraint to apply when values fall outside the domain of the scale. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range. Discussion If the value you provide is less than 0, the domain of the scale ranges from the value you provide to 0. If the value you provide is greater than 0, the domain of the scale ranges from 0 to the value you provide.",
    "summary" : "Creates a new scale for the domain of 0 to the value you provide.",
    "title" : "init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/seconds-swift.property"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The value of the date magnitude in seconds per increment. ",
    "summary" : "The value of the date magnitude in seconds per increment.",
    "title" : "seconds"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/map(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.map(_:). ",
    "summary" : "Inherited from Sequence.map(_:).",
    "title" : "map(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/magnitudeOfDateRange(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "magnitudeOfDateRange(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/rangeHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper value of the range into which the discrete values map. ",
    "summary" : "The upper value of the range into which the discrete values map.",
    "title" : "rangeHigher"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/ticksFromValues(_:reversed:from:to:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Return Value A list of tick values validated against the domain, and range based on the setting of transformType Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.",
    "summary" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
    "title" : "ticksFromValues(_:reversed:from:to:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of discrete scale. ",
    "summary" : "The type of discrete scale.",
    "title" : "scaleType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingOuter(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the outer padding set to the value you provide.  The amount of padding outside of the bands.",
    "summary" : "Returns a new scale with the outer padding set to the value you provide.",
    "title" : "paddingOuter(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/contains(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a Boolean value indicating whether the given element is contained within the range expression.  The element to check for containment. Return Value true if element is contained in the range expression; otherwise, false.",
    "summary" : "Returns a Boolean value indicating whether the given element is contained within the range expression.",
    "title" : "contains(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/scaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "scaleType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/reversed"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates if the mapping from domain to range is inverted. ",
    "summary" : "A Boolean value that indicates if the mapping from domain to range is inverted.",
    "title" : "reversed"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/RdYlGn"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a red through yellow to green diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a red through yellow to green diverging color scheme.",
    "title" : "RdYlGn"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/band"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A discrete scale that returns a band for the scaled value. ",
    "summary" : "A discrete scale that returns a band for the scaled value.",
    "title" : "DiscreteScaleType.band"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(reversed:lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:lower:higher:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/BuGn"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  the spectral diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  the spectral diverging color scheme.",
    "title" : "BuGn"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/RdPu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a red to purple sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a red to purple sequential color scheme.",
    "title" : "RdPu"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/ticks(rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/makeIterator()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.makeIterator(). ",
    "summary" : "Inherited from Sequence.makeIterator().",
    "title" : "makeIterator()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A continuous scale for transforming and mapping dates to an output range you provide. ",
    "summary" : "A continuous scale for transforming and mapping dates to an output range you provide.",
    "title" : "DateScale"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/PiYG"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a pink to yellow-green diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a pink to yellow-green diverging color scheme.",
    "title" : "PiYG"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/Plasma"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  the plasma sequential color scheme.  Discussion Designed by van der Walt, Smith and Firing for matplotlib. ",
    "summary" : "An interpolator that presents  the plasma sequential color scheme.",
    "title" : "Plasma"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/transform(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the transform set to the value you provide.  The transform constraint to apply when values fall outside the domain of the scale. Return Value A copy of the scale with the transform setting you provide.",
    "summary" : "Returns a new scale with the transform set to the value you provide.",
    "title" : "transform(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/range(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(lower:higher:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/YlGn"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a yellow to green sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a yellow to green sequential color scheme.",
    "title" : "YlGn"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/contains(where:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.contains(where:). ",
    "summary" : "Inherited from Sequence.contains(where:).",
    "title" : "contains(where:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/allSatisfy(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.allSatisfy(_:). ",
    "summary" : "Inherited from Sequence.allSatisfy(_:).",
    "title" : "allSatisfy(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/init(lower:higher:reversed:interpolator:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Creates a new sequential scale that maps a domain value to a color.  The lowest value expected for the scale. The highest value expected for the scale. A Boolean value that indicates the color range is reversed. The interpolator that provides the color range to map.",
    "summary" : "Creates a new sequential scale that maps a domain value to a color.",
    "title" : "init(lower:higher:reversed:interpolator:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/days"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Days, up to a month. ",
    "summary" : "Days, up to a month.",
    "title" : "DateMagnitude.days"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/range(reversed:lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound for the scale’s range. The upper bound for the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/_(_:_:)-56efr"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.<(_:_:). ",
    "summary" : "Inherited from Comparable.<(_:_:).",
    "title" : "<(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/drop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Data processed against a scale is dropped if the value is outside of the scale’s domain. ",
    "summary" : "Data processed against a scale is dropped if the value is outside of the scale’s domain.",
    "title" : "DomainDataTransform.drop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/GnBu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a blue to green sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a blue to green sequential color scheme.",
    "title" : "GnBu"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/domain(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/domain"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An array of the types the scale maps into. ",
    "summary" : "An array of the types the scale maps into.",
    "title" : "domain"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/InputType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Scale.InputType. ",
    "summary" : "Inherited from Scale.InputType.",
    "title" : "DateScale.InputType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/point"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A discrete scale that returns a point for the scaled value. ",
    "summary" : "A discrete scale that returns a point for the scaled value.",
    "title" : "DiscreteScaleType.point"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(reversed:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the range you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range of the values into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the range you provide.",
    "title" : "range(reversed:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/min(by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.min(by:). ",
    "summary" : "Inherited from Sequence.min(by:).",
    "title" : "min(by:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/YlOrRd"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a yellow through orange to red sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a yellow through orange to red sequential color scheme.",
    "title" : "YlOrRd"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/Inferno"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  the inferno sequential color scheme.  Discussion Designed by van der Walt, Smith and Firing for matplotlib. ",
    "summary" : "An interpolator that presents  the inferno sequential color scheme.",
    "title" : "Inferno"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/compactMap(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.compactMap(_:). ",
    "summary" : "Inherited from Sequence.compactMap(_:).",
    "title" : "compactMap(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/reversed"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "A Boolean value that indicates if the mapping from domain to range is inverted. ",
    "summary" : "A Boolean value that indicates if the mapping from domain to range is inverted.",
    "title" : "reversed"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/lazy"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.lazy. ",
    "summary" : "Inherited from Sequence.lazy.",
    "title" : "lazy"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A collection of components to provide structures that support data visualization. Overview SwiftViz includes components useful to creating visualizations of data. Many such visualizations require mapping from an abstract set of input values to another output value. Continuous scales map from one continuous range to another, such as 0...10 to 5.0...36.0. The continuous scales include scales that support linear, logarithmic, and exponential visualization transforms. Discrete scales map from a discrete range, defined by a collection, to a continuous range, as a point or as a band, with spacing considered in the scale’s range. Loosely based on the APIs and the visualization constructs created by Mike Bostock and contributors to D3.js",
    "summary" : "A collection of components to provide structures that support data visualization.",
    "title" : "SwiftVizScale"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The range to apply as the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms a value within the range into the associated domain value.  A value in the range of the scale. The lower bound to the range to map from. The upper bound to the range to map from. Return Value A value linearly mapped from the range back into the domain.",
    "summary" : "Transforms a value within the range into the associated domain value.",
    "title" : "invert(_:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/InputType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Scale.InputType. ",
    "summary" : "Inherited from Scale.InputType.",
    "title" : "ContinuousScale.InputType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/init(_:paddingInner:paddingOuter:round:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new band scale.  An array of the types the scale maps into. The amount of padding between bands. The amount of padding outside of the bands. A Boolean value that indicates the scaled values are returned as rounded values. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Creates a new band scale.",
    "title" : "init(_:paddingInner:paddingOuter:round:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the range you provide.  The range of the values into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the range you provide.",
    "title" : "range(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/ticks(rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/validTickValues(_:formatter:)-9ytj1"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a list of strings that make up the tick values that are contained within the domain of the scale.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.",
    "summary" : "Returns a list of strings that make up the tick values that are contained within the domain of the scale.",
    "title" : "validTickValues(_:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/HistogramIterator"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type that allows iteration over an ordered dictionary’s elements. ",
    "summary" : "The type that allows iteration over an ordered dictionary’s elements.",
    "title" : "Histogram.HistogramIterator"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale\/range(reversed:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the range you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range of the values into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the range you provide.",
    "title" : "range(reversed:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/minutes"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Minutes, up to an hour. ",
    "summary" : "Minutes, up to an hour.",
    "title" : "DateMagnitude.minutes"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/...(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable....(_:_:). ",
    "summary" : "Inherited from Comparable....(_:_:).",
    "title" : "...(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/flatMap(_:)-9hzot"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [

    ],
    "rawIndexableTextContent" : "Inherited from Sequence.flatMap(_:). ",
    "summary" : "Inherited from Sequence.flatMap(_:).",
    "title" : "flatMap(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type used to indicate the start and stop positions for a band associated with the provided value. ",
    "summary" : "A type used to indicate the start and stop positions for a band associated with the provided value.",
    "title" : "Band"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/dropLast(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.dropLast(_:). ",
    "summary" : "Inherited from Sequence.dropLast(_:).",
    "title" : "dropLast(_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Sequential, multi-hue color schemes.  Overview Color Example BuPu  GnBu  OrRd  PuBu  PuBuGn  PuRd  RdPu  YlGn  YlGnBu  YlOrBr  YlOrRd  Viridis  Magma  Inferno  Plasma  Cividis  Turbo  ",
    "summary" : "Sequential, multi-hue color schemes.",
    "title" : "ColorScheme.SequentialMultiHue"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/Viridis"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  the viridis sequential color scheme.  Discussion Designed by van der Walt, Smith and Firing for matplotlib. ",
    "summary" : "An interpolator that presents  the viridis sequential color scheme.",
    "title" : "Viridis"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The lower bound for the scale’s range. The upper bound for the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ComputedRGBInterpolator\/interpolate(_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns the color mapped from the unit value you provide.  A unit value between 0 and  1.",
    "summary" : "Returns the color mapped from the unit value you provide.",
    "title" : "interpolate(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/rangeHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper value of the range into which the discrete values map. ",
    "summary" : "The upper value of the range into which the discrete values map.",
    "title" : "rangeHigher"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "A type that maps values from a continuous input domain to a color. ",
    "summary" : "A type that maps values from a continuous input domain to a color.",
    "title" : "SequentialScale"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/validTickValues(_:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a list of strings that make up the tick values that are contained within the domain of the scale.  an array of values of the Scale’s InputType An optional formatter to convert the domain values into strings.",
    "summary" : "Returns a list of strings that make up the tick values that are contained within the domain of the scale.",
    "title" : "validTickValues(_:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/...(_:)-67v4z"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable....(_:). ",
    "summary" : "Inherited from Comparable....(_:).",
    "title" : "...(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/relative(to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the range of indices described by this range expression within the given collection.  The collection to evaluate this range expression in relation to. Return Value A range suitable for slicing collection. The returned range is not guaranteed to be inside the bounds of collection. Callers should apply the same preconditions to the return value as they would to a range provided directly by the user.",
    "summary" : "Returns the range of indices described by this range expression within the given collection.",
    "title" : "relative(to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/shuffled()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.shuffled(). ",
    "summary" : "Inherited from Sequence.shuffled().",
    "title" : "shuffled()"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A discrete scale that maps from a discrete value within a collection to a band within a continuous output range.  Overview Band scales are useful for bar charts, calculating explicit bands with optional spacing to align with elements of a collection. If you mapping discrete data into a scatter plot, consider using the PointScale instead.",
    "summary" : "A discrete scale that maps from a discrete value within a collection to a band within a continuous output range.",
    "title" : "BandScale"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A discrete scale that maps from a discrete value within a collection to a point within a continuous output range.  Overview Point scales are useful for mapping discrete data from a collection to a collection of specific points. If you are rendering a bar chart, consider using the BandScale instead.",
    "summary" : "A discrete scale that maps from a discrete value within a collection to a point within a continuous output range.",
    "title" : "PointScale"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/shuffled(using:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.shuffled(using:). ",
    "summary" : "Inherited from Sequence.shuffled(using:).",
    "title" : "shuffled(using:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/defaultTickValues(formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the strings that make up the ticks for the scale.",
    "title" : "defaultTickValues(formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/enumerated()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.enumerated(). ",
    "summary" : "Inherited from Sequence.enumerated().",
    "title" : "enumerated()"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/PuOr"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a purple to orange diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a purple to orange diverging color scheme.",
    "title" : "PuOr"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scaleType(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the type of scale set to the type you provide.  The type of continuous scale.",
    "summary" : "Returns a new scale with the type of scale set to the type you provide.",
    "title" : "scaleType(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/IndexedColorInterpolator"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "An interpolator that maps a unit value into a color based on the position between the colors. ",
    "summary" : "An interpolator that maps a unit value into a color based on the position between the colors.",
    "title" : "IndexedColorInterpolator"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/domainLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower bound of the input domain. ",
    "summary" : "The lower bound of the input domain.",
    "title" : "domainLower"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The description of the bin. ",
    "summary" : "The description of the bin.",
    "title" : "description"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms the input value using a linear function to the resulting value into the range you provide.  A value in the domain of the scale. The lower bound to the range to map to. The upper bound of the range to map to. Return Value A value mapped to the range you provide.",
    "summary" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
    "title" : "scale(_:from:to:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/init(data:thresholds:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Explicitly build a histogram with the explicit thresholds you provide.  The data to populate the histogram. The values to use as the thresholds for the bins. Discussion Use this initializer to create a histogram with non-uniform bin sizes. The number of bins created is one less than the number of thresholds you provide.",
    "summary" : "Explicitly build a histogram with the explicit thresholds you provide.",
    "title" : "init(data:thresholds:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/scale(_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.  The value to be scaled. Return Value A value within the bounds of the range values you provide, or nil if the value was dropped.",
    "summary" : "Converts a value comparing it to the input domain, transforming the value, and mapping it between the range values you provide.",
    "title" : "scale(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/IndexedColorInterpolator\/init(_:)-6i0o1"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Creates a new color interpolator that maps between the colors you provide.  The sequences of colors to map through.",
    "summary" : "Creates a new color interpolator that maps between the colors you provide.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-4twbk"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the upper and lower bounds of the domain range you provide.  A range that represents the scale’s domain. The type of continuous scale. A transformation value that indicates whether the output vales are constrained to the min and max of the output range. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range.",
    "summary" : "Creates a new scale for the upper and lower bounds of the domain range you provide.",
    "title" : "init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/ticks(rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/starts(with:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.starts(with:by:). ",
    "summary" : "Inherited from Sequence.starts(with:by:).",
    "title" : "starts(with:by:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/RdYlBu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a red through yellow to green diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a red through yellow to green diverging color scheme.",
    "title" : "RdYlBu"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/reversed"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates if the mapping from domain to range is inverted. ",
    "summary" : "A Boolean value that indicates if the mapping from domain to range is inverted.",
    "title" : "reversed"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/padding"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The amount of padding between bands. ",
    "summary" : "The amount of padding between bands.",
    "title" : "padding"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/suffix(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.suffix(_:). ",
    "summary" : "Inherited from Sequence.suffix(_:).",
    "title" : "suffix(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A description of the scale. ",
    "summary" : "A description of the scale.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:)-91w7x"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to span the values you provide.  An array of input values.",
    "summary" : "Returns a new scale with the domain set to span the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/rangeLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower value of the range into which the discrete values map. ",
    "summary" : "The lower value of the range into which the discrete values map.",
    "title" : "rangeLower"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/upperBound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper bound of the bin range. ",
    "summary" : "The upper bound of the bin range.",
    "title" : "upperBound"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/scale(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms the input value to the resulting value into the range you provide.  A value in the domain of the scale. Return Value A value mapped to the range you provide. Discussion The input value is first verified against the domain settings for the scale based on the transformType set for the scale. The value is then transformed using a function based on the scaleType, interpolated between domainLower and domainHigher, then mapped to the range taking into account the scale’s reversed setting.",
    "summary" : "Transforms the input value to the resulting value into the range you provide.",
    "title" : "scale(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/Element"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.Element. ",
    "summary" : "Inherited from Sequence.Element.",
    "title" : "Histogram.Element"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.  The value to be scaled. The higher bounding value of the range to transform from. Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. Discussion This method is a convenience method that sets the lower value of the range is 0. Before scaling the value, the scale may transform or drop the value based on the setting of transformType.",
    "summary" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between 0 and to the upper bound you provide.",
    "title" : "scale(_:to:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/range(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The lower bound for the scale’s range. The upper bound for the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(lower:higher:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-6xgot"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The type of continuous scale. A transformation value that indicates whether the output vales are constrained to the min and max of the output range. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range.",
    "summary" : "Creates a new scale for the upper and lower bounds of the domain you provide.",
    "title" : "init(lower:higher:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/Cividis"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents the cividis color scheme, designed for color impaired viewers.  Discussion Designed by van der Walt, Smith and Firing for matplotlib. ",
    "summary" : "An interpolator that presents the cividis color scheme, designed for color impaired viewers.",
    "title" : "Cividis"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/MakingAndUsingScales"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Making Scales Summary Overview Here’s something interesting.",
    "summary" : "Making Scales Summary",
    "title" : "Making and Using Scales"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/rangeHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper bound of the output range. ",
    "summary" : "The upper bound of the output range.",
    "title" : "rangeHigher"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/OutputType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type used for the scale’s output. ",
    "summary" : "The type used for the scale’s output.",
    "title" : "OutputType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that maps values from an input domain to an output range. ",
    "summary" : "A type that maps values from an input domain to an output range.",
    "title" : "Scale"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/reversed"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates if the mapping from domain to range is inverted. ",
    "summary" : "A Boolean value that indicates if the mapping from domain to range is inverted.",
    "title" : "reversed"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorInterpolator\/interpolate(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the color mapped from the unit value you provide.  A unit value between 0 and  1.",
    "summary" : "Returns the color mapped from the unit value you provide.",
    "title" : "interpolate(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(lower:higher:)-5u2ks"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(lower:higher:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the value from the range values you provide back to the discrete value that it matches.  A value within the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale.",
    "summary" : "Maps the value from the range values you provide back to the discrete value that it matches.",
    "title" : "invert(_:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/defaultTickValues(formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the strings that make up the ticks for the scale.",
    "title" : "defaultTickValues(formatter:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms a value within the range into an associated domain value.  A value in the range of the scale. Return Value A value linearly mapped from the range back into the domain.",
    "summary" : "Transforms a value within the range into an associated domain value.",
    "title" : "invert(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/_(_:_:)-9kvsv"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.>(_:_:). ",
    "summary" : "Inherited from Comparable.>(_:_:).",
    "title" : ">(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/rangeLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower bound of the output range. ",
    "summary" : "The lower bound of the output range.",
    "title" : "rangeLower"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/transformAgainstDomain(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Processes a value against the scale, potentially constraining or dropping the value.  The value to transform against the domain of the scale. Return Value An updated value, or nil if the value was dropped. Discussion The value is transformed based on the scale’s transformType setting. transformType transform effect DomainDataTransform.none The method doesn’t adjusted or drop the value. DomainDataTransform.drop Values outside the scale’s domain are dropped. DomainDataTransform.clamp Values outside the scale’s domain are adjusted to match the highest or lowest values of the domain. ",
    "summary" : "Processes a value against the scale, potentially constraining or dropping the value.",
    "title" : "transformAgainstDomain(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/scale(_:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms the input value using a linear function to the resulting value into the range you provide.  A value in the domain of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map to. The upper bound of the range to map to. Return Value A value mapped to the range you provide.",
    "summary" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
    "title" : "scale(_:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/max(by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.max(by:). ",
    "summary" : "Inherited from Sequence.max(by:).",
    "title" : "max(by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/RangeExpression-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "RangeExpression Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingOuter"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The amount of padding outside of the bands. ",
    "summary" : "The amount of padding outside of the bands.",
    "title" : "paddingOuter"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of discrete scale. ",
    "summary" : "The type of discrete scale.",
    "title" : "DiscreteScaleType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/domain"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An array of the types the scale maps into. ",
    "summary" : "An array of the types the scale maps into.",
    "title" : "domain"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/desiredTicks"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The number of ticks desired when presenting results using the scale. ",
    "summary" : "The number of ticks desired when presenting results using the scale.",
    "title" : "desiredTicks"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ReversibleScale\/range(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the range you provide.  The range of the values into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the range you provide.",
    "title" : "range(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/higher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "higher"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/.._(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable...<(_:). ",
    "summary" : "Inherited from Comparable...<(_:).",
    "title" : "..<(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/init(lower:higher:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain.",
    "summary" : "Creates a new scale for the upper and lower bounds of the domain you provide.",
    "title" : "init(lower:higher:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/range(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/domainHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper bound of the input domain. ",
    "summary" : "The upper bound of the input domain.",
    "title" : "domainHigher"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/forEach(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.forEach(_:). ",
    "summary" : "Inherited from Sequence.forEach(_:).",
    "title" : "forEach(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/hours"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Hours, up to a day. ",
    "summary" : "Hours, up to a day.",
    "title" : "DateMagnitude.hours"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/domain(_:nice:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns a new scale with the domain inferred from the list of values you provide.  The list of values to use to determine the scale’s domain. A Boolean value that indicates whether to expand the domain to visually nice values. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain inferred from the list of values you provide.",
    "title" : "domain(_:nice:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/drop(while:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.drop(while:). ",
    "summary" : "Inherited from Sequence.drop(while:).",
    "title" : "drop(while:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/lower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "lower"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domainHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper bound of the input domain. ",
    "summary" : "The upper bound of the input domain.",
    "title" : "domainHigher"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/compare(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Sequence.compare(_:_:). ",
    "summary" : "Inherited from Sequence.compare(_:_:).",
    "title" : "compare(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorInterpolator"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that can provide an interpolated color. ",
    "summary" : "A type that can provide an interpolated color.",
    "title" : "ColorInterpolator"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue\/Grays"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a white to black single-hue color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a white to black single-hue color scheme.",
    "title" : "Grays"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/DiscreteScale-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "DiscreteScale Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domainLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower bound of the input domain. ",
    "summary" : "The lower bound of the input domain.",
    "title" : "domainLower"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:)-9z1xu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps a band back to the category it matches.  a band providing a pair of range values. Return Value The category that matches the midpoint of the band values.",
    "summary" : "Maps a band back to the category it matches.",
    "title" : "invert(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/dropFirst(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.dropFirst(_:). ",
    "summary" : "Inherited from Sequence.dropFirst(_:).",
    "title" : "dropFirst(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/domain(_:)-ct2c"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns a new scale with the domain set to span the values you provide.  An array of input values.",
    "summary" : "Returns a new scale with the domain set to span the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCH"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that provides conversion and interpolation of colors through the LCH color space.  Overview The LCH (Luminosity, Chroma, Hue) color space provides a perceptually consistent interpolation between two colors when compared to interpolating through other color spaces. Interpolation using the LAB color space is the close, but can result in perceptually darker segments during the interpolation. The following image provides a visual comparison of interpolating between the main boundary colors (red, green, and blue) when interpolated through the LAB color space and the LCH color space.  The wikipedia article on the LCH color space provides more information.",
    "summary" : "A type that provides conversion and interpolation of colors through the LCH color space.",
    "title" : "LCH"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/scaleType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of continuous scale. ",
    "summary" : "The type of continuous scale.",
    "title" : "scaleType"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/RdBu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a red to blue diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a red to blue diverging color scheme.",
    "title" : "RdBu"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCH\/interpolate(_:_:t:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Interpolate between two colors using the LCH color space.  The first color. The second color. A unit value between 0 and 1 representing the position between the first and second colors to return. Return Value A color interpolated between the two colors you provide. Discussion The LCH color space is a mapping of the color coordinates of the CIELAB color space into polar coordinates with the goal of maintaining a perceptually constant luminosity and color value (chroma) while interpolating between two colors.",
    "summary" : "Interpolate between two colors using the LCH color space.",
    "title" : "interpolate(_:_:t:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:)-7oobb"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to span the values you provide.  An array of input values.",
    "summary" : "Returns a new scale with the domain set to span the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/Turbo"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents the turbo color scheme.  Discussion Designed by Anton Mikhailov ",
    "summary" : "An interpolator that presents the turbo color scheme.",
    "title" : "Turbo"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DomainDataTransform\/clamp"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Data processed against a scale is clamped to the upper and lower values of the scale’s domain. ",
    "summary" : "Data processed against a scale is clamped to the upper and lower values of the scale’s domain.",
    "title" : "DomainDataTransform.clamp"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticksFromValues(_:reversed:from:to:formatter:)-3u6d8"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.  an array of values of the Scale’s InputType A Boolean value that indicates if the mapping from domain to range is inverted. The lower value of the range the scale maps to. The higher value of the range the scale maps to. An optional formatter to convert the domain values into strings. Return Value A list of tick values validated against the domain, and range based on the setting of transformType Discussion Used for manually specifying a series of ticks that you want to have displayed. Values presented for display that are not within the domain of the scale are dropped. Values that scale outside of the range you provide are adjusted based on the setting of transformType.",
    "summary" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
    "title" : "ticksFromValues(_:reversed:from:to:formatter:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/Magma"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  the magma sequential color scheme.  Discussion Designed by van der Walt, Smith and Firing for matplotlib. ",
    "summary" : "An interpolator that presents  the magma sequential color scheme.",
    "title" : "Magma"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/IndexedColorInterpolator\/init(_:)-3gpbm"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Creates a new color interpolator using sequences of 6 Hex Digits to represent a color.  The sequence to convert into the colors.",
    "summary" : "Creates a new color interpolator using sequences of 6 Hex Digits to represent a color.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/round"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates the scaled values are returned as rounded values. ",
    "summary" : "A Boolean value that indicates the scaled values are returned as rounded values.",
    "title" : "round"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/scale(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the discrete item into a range location.  A discrete item from the list provided as the domain for the scale. Return Value A location along the range that indicates a point that matches with the value you provided, or nil if the value isn’t contained by the domain.",
    "summary" : "Maps the discrete item into a range location.",
    "title" : "scale(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(_:)-6qxk9"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The range to apply as the scale’s domain Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Cyclical\/Sinebow"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents the sinebow cyclical color scheme.  Discussion ",
    "summary" : "An interpolator that presents the sinebow cyclical color scheme.",
    "title" : "Sinebow"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/ticks(reversed:rangeLower:rangeHigher:formatter:calendar:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  A Boolean value that indicates if the mapping from domain to range is inverted. the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings. The calendar to use in determining time slices.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:calendar:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new identity scale.  The type of continuous scale. A transformation value that indicates whether the output vales are constrained to the min and max of the output range. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range.",
    "summary" : "Creates a new identity scale.",
    "title" : "init(type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/Sequence-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Sequence Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/withContiguousStorageIfAvailable(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.withContiguousStorageIfAvailable(_:). ",
    "summary" : "Inherited from Sequence.withContiguousStorageIfAvailable(_:).",
    "title" : "withContiguousStorageIfAvailable(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/ticks(rangeLower:rangeHigher:formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the locations within the output range to locate ticks for the scale.  the lower value for the range into which to position the ticks. The higher value for the range into which to position the ticks. An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the locations within the output range to locate ticks for the scale.",
    "title" : "ticks(rangeLower:rangeHigher:formatter:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue\/Greens"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a white to green single-hue color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a white to green single-hue color scheme.",
    "title" : "Greens"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/Spectral"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  the spectral diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents  the spectral diverging color scheme.",
    "title" : "Spectral"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/HistogramIterator\/next()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Advances to the next element and returns it, or nil if no next element exists.  Discussion O(1)",
    "summary" : "Advances to the next element and returns it, or nil if no next element exists.",
    "title" : "next()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/init(data:)-4w0u8"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Automatically determine the bins from data.  The data to populate the histogram.",
    "summary" : "Automatically determine the bins from data.",
    "title" : "init(data:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.  The value to be scaled back from the range values to the domain. The higher bounding value of the range to transform from. Return Value a value within the bounds of the range values you provide, or nil if the value was dropped. Discussion This method is a convenience method that sets the lower value of the range is 0. The inverse of scale(_:to:). After converting the data back to the domain range, the scale may transform or drop the value based on the setting of transformType.",
    "summary" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
    "title" : "invert(_:to:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue\/Purples"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a white to purple single-hue color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a white to purple single-hue color scheme.",
    "title" : "Purples"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The description of the scale. ",
    "summary" : "The description of the scale.",
    "title" : "description"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/invert(_:reversed:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Transforms a value within the range into the associated domain value.  A value in the range of the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound to the range to map from. The upper bound to the range to map from. Return Value A value linearly mapped from the range back into the domain.",
    "summary" : "Transforms a value within the range into the associated domain value.",
    "title" : "invert(_:reversed:from:to:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/domain(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  An array of the types the scale maps into.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/domain(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  An array of dates that defines the range of input values. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/lowerBound"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower bound of the bin range. ",
    "summary" : "The lower bound of the bin range.",
    "title" : "lowerBound"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/defaultTickValues(formatter:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns an array of the strings that make up the ticks for the scale.  An optional formatter to convert the domain values into strings.",
    "summary" : "Returns an array of the strings that make up the ticks for the scale.",
    "title" : "defaultTickValues(formatter:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/log"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A logarithmic continuous scale. ",
    "summary" : "A logarithmic continuous scale.",
    "title" : "ContinuousScaleType.log"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/rangeLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower value of the range into which the discrete values map. ",
    "summary" : "The lower value of the range into which the discrete values map.",
    "title" : "rangeLower"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/range(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  The range to apply as the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScaleType\/power(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An exponential continuous scale. ",
    "summary" : "An exponential continuous scale.",
    "title" : "ContinuousScaleType.power(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCH\/components(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a list of four components from a Core Graphics color instance, mapped into the LCH color space.  Discussion The components, in order, are Luminance, Chroma, Hue, and Alpha.",
    "summary" : "Returns a list of four components from a Core Graphics color instance, mapped into the LCH color space.",
    "title" : "components(from:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/range(reversed:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the range set to the values you provide.  A Boolean value that indicates if the mapping from domain to range is inverted. The range to apply as the scale’s range. Return Value A copy of the scale with the range values you provide.",
    "summary" : "Returns a new scale with the range set to the values you provide.",
    "title" : "range(reversed:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/rangeLower"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The lower value of the range into which the discrete values map. ",
    "summary" : "The lower value of the range into which the discrete values map.",
    "title" : "rangeLower"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DiscreteScale\/rangeHigher"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The upper value of the range into which the discrete values map. ",
    "summary" : "The upper value of the range into which the discrete values map.",
    "title" : "rangeHigher"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Scale\/InputType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type used for the scale’s domain. ",
    "summary" : "The type used for the scale’s domain.",
    "title" : "InputType"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/BuPu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a blue through purple sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a blue through purple sequential color scheme.",
    "title" : "BuPu"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateMagnitude\/seconds-swift.enum.case"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Seconds, up to a minute. ",
    "summary" : "Seconds, up to a minute.",
    "title" : "DateMagnitude.seconds"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Diverging\/BrBG"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents a brown to blue-green diverging color scheme.  Discussion ",
    "summary" : "An interpolator that presents a brown to blue-green diverging color scheme.",
    "title" : "BrBG"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/PuBu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a purple to blue sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a purple to blue sequential color scheme.",
    "title" : "PuBu"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/invert(_:from:to:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Maps the value from the range values you provide back to the discrete value that it matches.  A value within the range of the scale. The lower value of the range into which the discrete values map. The upper value of the range into which the discrete values map. Return Value The item that matches at that value, or nil if the point is within padding or outside the range of the scale.",
    "summary" : "Maps the value from the range values you provide back to the discrete value that it matches.",
    "title" : "invert(_:from:to:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/DateScale\/domain(lower:higher:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(lower:higher:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Sequential, single-hue color schemes.  Overview Color Example Oranges  Purples  Grays  Blues  Greens  Reds  ",
    "summary" : "Sequential, single-hue color schemes.",
    "title" : "ColorScheme.SequentialSingleHue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/BandScale\/paddingInner"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The amount of padding between bands. ",
    "summary" : "The amount of padding between bands.",
    "title" : "paddingInner"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(lower:higher:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-1dq3o"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the upper and lower bounds of the domain you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. The type of continuous scale. A transformation value that indicates whether the output vales are constrained to the min and max of the output range. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range.",
    "summary" : "Creates a new scale for the upper and lower bounds of the domain you provide.",
    "title" : "init(lower:higher:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/interpolator(_:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Returns a new scale with the interpolator set to the instance you provide.  An interpolator instance. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the interpolator set to the instance you provide.",
    "title" : "interpolator(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/domain(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  An array of the types the scale maps into.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/LCH\/color(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a Core Graphics color instance from individual components in the LCH color space.  A list of four components in the order: Luminance, Chroma, Hue, and Alpha.",
    "summary" : "Creates a Core Graphics color instance from individual components in the LCH color space.",
    "title" : "color(from:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/Cyclical"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Cyclical, multi-hue color schemes.  Overview Color Example Sinebow  ",
    "summary" : "Cyclical, multi-hue color schemes.",
    "title" : "ColorScheme.Cyclical"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/underestimatedCount"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.underestimatedCount. ",
    "summary" : "Inherited from Sequence.underestimatedCount.",
    "title" : "underestimatedCount"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/description"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/domain(lower:higher:)-78pku"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns a new scale with the domain set to the values you provide.  The lower bound for the scale’s domain. The upper bound for the scale’s domain. Return Value A copy of the scale with the domain values you provide.",
    "summary" : "Returns a new scale with the domain set to the values you provide.",
    "title" : "domain(lower:higher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/HistogramBinRange\/_=(_:_:)-o5le"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Comparable.<=(_:_:). ",
    "summary" : "Inherited from Comparable.<=(_:_:).",
    "title" : "<=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)-5y3b5"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new scale for the upper and lower bounds of the domain range you provide.  A range that represents the scale’s domain. The type of continuous scale. A transformation value that indicates whether the output vales are constrained to the min and max of the output range. The desired number of ticks when visually representing the scale. A Boolean value that indicates if the mapping from domain to range is inverted. The lower bound of the output range. The upper bound of the output range.",
    "summary" : "Creates a new scale for the upper and lower bounds of the domain range you provide.",
    "title" : "init(_:type:transform:desiredTicks:reversed:rangeLower:rangeHigher:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/SequentialScale\/domainLower"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "The lower bound of the input domain. ",
    "summary" : "The lower bound of the input domain.",
    "title" : "domainLower"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/filter(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.filter(_:). ",
    "summary" : "Inherited from Sequence.filter(_:).",
    "title" : "filter(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ComputedRGBInterpolator\/init(name:r:g:b:)"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Creates a new color interpolator that maps between the two colors you provide.  The color at the beginning. The color at the end.",
    "summary" : "Creates a new color interpolator that maps between the two colors you provide.",
    "title" : "init(name:r:g:b:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/YlGnBu"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a yellow through green to blue sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a yellow through green to blue sequential color scheme.",
    "title" : "YlGnBu"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Histogram\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:). ",
    "summary" : "Inherited from Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:).",
    "title" : "split(maxSplits:omittingEmptySubsequences:whereSeparator:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialSingleHue\/Oranges"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  a white to orange single-hue color scheme.  Discussion ",
    "summary" : "An interpolator that presents  a white to orange single-hue color scheme.",
    "title" : "Oranges"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ColorScheme\/SequentialMultiHue\/OrRd"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An interpolator that presents  an orange to red sequential color scheme.  Discussion ",
    "summary" : "An interpolator that presents  an orange to red sequential color scheme.",
    "title" : "OrRd"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PointScale\/DiscreteScale-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "DiscreteScale Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/desiredTicks"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The number of ticks desired when creating the scale.  Discussion This number may not match the number of ticks returned by ticksFromValues(_:reversed:from:to:formatter:) or ticksFromValues(_:reversed:from:to:formatter:).",
    "summary" : "The number of ticks desired when creating the scale.",
    "title" : "desiredTicks"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Band\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A continuous scale for transforming and mapping continuous input values within a domain to output values you provide. ",
    "summary" : "A continuous scale for transforming and mapping continuous input values within a domain to output values you provide.",
    "title" : "ContinuousScale"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/Tick"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A  visual representation of a point along an axis.  Overview When created based on a range, a tick includes a location along a single direction and a textual representation. It is meant to be created using a Scale, with some input domain being mapped to visualization using the Scale’s output range.",
    "summary" : "A  visual representation of a point along an axis.",
    "title" : "Tick"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/ContinuousScale\/reversed"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value that indicates if the mapping from domain to range is inverted. ",
    "summary" : "A Boolean value that indicates if the mapping from domain to range is inverted.",
    "title" : "reversed"
  }
]