{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale\/TickScale-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "SwiftVizScale"
      }
    ],
    "role" : "collectionGroup",
    "title" : "TickScale Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale\/tickValues(_:from:to:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftvizscale\/powerscale\/doublescale\/tickscale-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale": {
  "abstract" : [
    {
      "text" : "A collection of components to provide structures that support data visualization.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftVizScale",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/PowerScale": {
  "abstract" : [
    {
      "text" : "A collection of power scales.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PowerScale"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PowerScale"
    }
  ],
  "role" : "symbol",
  "title" : "PowerScale",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/powerscale"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/PowerScale/DoubleScale": {
  "abstract" : [
    {
      "text" : "A power scale created with a continuous input domain that provides methods to convert values within that domain to an output range.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DoubleScale"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DoubleScale"
    }
  ],
  "role" : "symbol",
  "title" : "PowerScale.DoubleScale",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/powerscale\/doublescale"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/PowerScale/DoubleScale/tickValues(_:from:to:)": {
  "abstract" : [
    {
      "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "OutputType",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Real",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "tickValues"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale\/tickValues(_:from:to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "tickValues(_:from:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/powerscale\/doublescale\/tickvalues(_:from:to:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/PowerScale/DoubleScale/ticks(rangeLower:rangeHigher:)": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Double",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "OutputType",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Real",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/PowerScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(rangeLower:rangeHigher:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/powerscale\/doublescale\/ticks(rangelower:rangehigher:)"
}
}
}