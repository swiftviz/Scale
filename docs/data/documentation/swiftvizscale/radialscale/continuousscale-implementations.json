{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ContinuousScale-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "SwiftVizScale"
      }
    ],
    "role" : "collectionGroup",
    "title" : "ContinuousScale Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-24xez",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-27kcq",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-3l5q5",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-3ooif",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domainContains(_:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:to:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:to:reversed:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:to:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:to:reversed:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-2ibni",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-47aaq",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-6tnha",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-9dxor",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-24v5p",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-3de4p",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-6agip",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-twb3",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticksFromValues(_:reversed:from:to:formatter:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/transformAgainstDomain(_:)",
        "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/validTickValues(_:formatter:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftvizscale\/radialscale\/continuousscale-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale": {
  "abstract" : [
    {
      "text" : "A collection of components to provide structures that support data visualization.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftVizScale",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale": {
  "abstract" : [
    {
      "text" : "A linear scale for transforming and mapping continuous input values within a domain to output values you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RadialScale"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RadialScale"
    }
  ],
  "role" : "symbol",
  "title" : "RadialScale",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/defaultTickValues(formatter:)-24xez": {
  "abstract" : [
    {
      "text" : "Returns an array of the strings that make up the ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "CGFloat",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultTickValues"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-24xez",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultTickValues(formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/defaulttickvalues(formatter:)-24xez"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/defaultTickValues(formatter:)-27kcq": {
  "abstract" : [
    {
      "text" : "Returns an array of the strings that make up the ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Float",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultTickValues"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-27kcq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultTickValues(formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/defaulttickvalues(formatter:)-27kcq"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/defaultTickValues(formatter:)-3l5q5": {
  "abstract" : [
    {
      "text" : "Returns an array of the strings that make up the ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Double",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultTickValues"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-3l5q5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultTickValues(formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/defaulttickvalues(formatter:)-3l5q5"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/defaultTickValues(formatter:)-3ooif": {
  "abstract" : [
    {
      "text" : "Returns an array of the strings that make up the ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Int",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultTickValues"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/defaultTickValues(formatter:)-3ooif",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultTickValues(formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/defaulttickvalues(formatter:)-3ooif"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/domainContains(_:)": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "domainContains"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/domainContains(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "domainContains(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/domaincontains(_:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/invert(_:to:)": {
  "abstract" : [
    {
      "text" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "invert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "invert(_:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/invert(_:to:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/invert(_:to:reversed:)": {
  "abstract" : [
    {
      "text" : "Converts a value comparing it to the upper value of a range, mapping it to the input domain, and inverting scale’s transform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "invert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/invert(_:to:reversed:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "invert(_:to:reversed:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/invert(_:to:reversed:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/scale(_:to:)": {
  "abstract" : [
    {
      "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between ",
      "type" : "text"
    },
    {
      "code" : "0",
      "type" : "codeVoice"
    },
    {
      "text" : " and to the upper bound you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scale"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scale(_:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/scale(_:to:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/scale(_:to:reversed:)": {
  "abstract" : [
    {
      "text" : "Converts a value comparing it to the input domain, transforming the value, and mapping it into values between ",
      "type" : "text"
    },
    {
      "code" : "0",
      "type" : "codeVoice"
    },
    {
      "text" : " and to the upper bound you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scale"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/scale(_:to:reversed:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scale(_:to:reversed:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/scale(_:to:reversed:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(rangeLower:rangeHigher:formatter:)-2ibni": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Int",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-2ibni",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(rangelower:rangehigher:formatter:)-2ibni"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(rangeLower:rangeHigher:formatter:)-47aaq": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "CGFloat",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-47aaq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(rangelower:rangehigher:formatter:)-47aaq"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(rangeLower:rangeHigher:formatter:)-6tnha": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Double",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-6tnha",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(rangelower:rangehigher:formatter:)-6tnha"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(rangeLower:rangeHigher:formatter:)-9dxor": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Float",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(rangeLower:rangeHigher:formatter:)-9dxor",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(rangelower:rangehigher:formatter:)-9dxor"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(reversed:rangeLower:rangeHigher:formatter:)-24v5p": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Int",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-24v5p",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(reversed:rangelower:rangehigher:formatter:)-24v5p"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(reversed:rangeLower:rangeHigher:formatter:)-3de4p": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Float",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-3de4p",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(reversed:rangelower:rangehigher:formatter:)-3de4p"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(reversed:rangeLower:rangeHigher:formatter:)-6agip": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "CGFloat",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-6agip",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(reversed:rangelower:rangehigher:formatter:)-6agip"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticks(reversed:rangeLower:rangeHigher:formatter:)-twb3": {
  "abstract" : [
    {
      "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "InputType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Double",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticks"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeLower"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rangeHigher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticks(reversed:rangeLower:rangeHigher:formatter:)-twb3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticks(reversed:rangeLower:rangeHigher:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticks(reversed:rangelower:rangehigher:formatter:)-twb3"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/ticksFromValues(_:reversed:from:to:formatter:)": {
  "abstract" : [
    {
      "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ticksFromValues"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "reversed"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale4TickV",
      "text" : "Tick"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P10OutputTypeQa",
      "text" : "OutputType"
    },
    {
      "kind" : "text",
      "text" : ">]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/ticksFromValues(_:reversed:from:to:formatter:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ticksFromValues(_:reversed:from:to:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/ticksfromvalues(_:reversed:from:to:formatter:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/transformAgainstDomain(_:)": {
  "abstract" : [
    {
      "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "transformAgainstDomain"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/transformAgainstDomain(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "transformAgainstDomain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/transformagainstdomain(_:)"
},
"doc://com.github.swiftviz.SwiftVizScale/documentation/SwiftVizScale/RadialScale/validTickValues(_:formatter:)": {
  "abstract" : [
    {
      "text" : "Returns a list of strings that make up the valid tick values out of the set that you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "validTickValues"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftVizScale0C0P9InputTypeQa",
      "text" : "InputType"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "formatter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSFormatter",
      "text" : "Formatter"
    },
    {
      "kind" : "text",
      "text" : "?) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.github.swiftviz.SwiftVizScale\/documentation\/SwiftVizScale\/RadialScale\/validTickValues(_:formatter:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "validTickValues(_:formatter:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftvizscale\/radialscale\/validtickvalues(_:formatter:)"
}
}
}